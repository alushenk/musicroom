{"version":3,"sources":["common/constants.js","common/helpers.js","common/components/DzPlayTracksActionButton/DzPlayTracksActionButton.js","common/components/TrackLikeButton/TrackLikeButton.js","common/components/PlayList/PlayList.js","common/components/DzSearch/DzSearch.js","common/components/FormFields/SwitchField.js","common/components/FormFields/UserMultipleSelect/UserMultipleSelect.js","common/components/PlayListDataForm/PlayListDataForm.js","pages/PlayListsPage/PlayListModalForm.js","pages/PlayListPage/PlayListPage.js","common/components/FormFields/UserAccountFields/UserNameField.js","common/components/FormFields/UserAccountFields/UserPasswordField.js","common/components/FormFields/UserAccountFields/UserRepeatPasswordField.js","common/components/FormFields/UserAccountFields/UserEmailField.js","pages/AuthorizationPage.js","pages/ProfilePage/ProfilePage.js","common/components/PlayLists/PlayLists.js","pages/PlayListsPage/PlayListsPage.js","pages/PlayListEditPage/PlayListEditPage.js","common/router/Routes.js","stores/sandboxStore.js","services/apiService.js","stores/settingsStore.js","services/deezerApiService.js","stores/tracksStore.js","stores/playlistsStore.js","common/components/AppHeader/AppHeader.js","App.js","serviceWorker.js","index.js"],"names":["constImages","webSocketBase","WEB_SOCKET_MESSAGE_TYPES","refresh","delete","TRACK_DUPLICATE_API_MESSAGE","AUTH_FORM_FIELDS","userName","password","repeatPassword","email","formActionType","AUTH_FORM_ACTION_TYPES","login","register","ASYNC_STATE","AUTH_LOCAL_STORAGE_FIELDS","token","userId","safeGetCurrentUserId","localStoreUserId","Number","localStorage","getItem","isFinite","isNaN","degreesToRadians","toUpperCase","split","degrees","Math","PI","distanceInKmBetweenEarthCoordinates","first","second","dLat","abs","lat","dLon","lon","latFirst","latSecond","a","sin","cos","atan2","sqrt","locationHasChanged","radius","floor","transferResponseErrorsToForm","form","e","data","get","response","fields","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","key","value","fieldValue","getFieldValue","errorText","String","Array","isArray","join","objectSpread","defineProperty","errors","message","setFields","handleNonFieldErrors","console","log","errorTexts","error","handleGetApiError","_ref3","detail","info","noop","localStorageCredentialsPresent","DzPlayTracksActionButton","props","_props$trackIds","trackIds","_props$startTrackInde","startTrackIndex","_props$className","className","_props$onClickSideEff","onClickSideEffect","react_default","createElement","es_icon","type","concat","onClick","ids","startIndex","arguments","length","undefined","window","DZ","player","playTracks","tackObjects","warn","dzPlayerPlayTracks","TrackLikeButton","iconType","columns","title","dataIndex","width","render","text","record","alt","src","paginationConfig","hideOnSinglePage","showSizeChanger","PlayList","_useState","useState","_useState2","activePopoverId","setActivePopoverId","playlistId","_props$playlistsStore","playlistsStore","items","withSelectableRows","selectedItem","handleItemSelect","configureActionColumn","showRatingColumn","_props$onPlaySideEffe","onPlaySideEffect","dzTrackIds","map","item","id","columnsWithTitle","index","components_DzPlayTracksActionButton_DzPlayTracksActionButton","push","votes","currentUserId","buttonProps","find","user","voteTrack","components_TrackLikeButton_TrackLikeButton","columnsWithAction","toConsumableArray","popover","content","es_button","arrowPointAtCenter","trigger","visible","onVisibleChange","additionalProps","onRow","table","assign","rowKey","dataSource","rowClassName","pagination","DzSearch","query","setQuery","renderItems","searchIsLoading","handleSearch","input","onChange","target","loading","disabled","queryObject","parts","v","trim","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","keyValuePair","toLowerCase","track","_keyValuePair2","err","return","parseQuery","FormItem","Form","Item","SwitchField","label","fieldName","_props$form","getFieldDecorator","setFieldsValue","es_switch","checked","Option","Select","UserMultipleSelect","users","formFieldName","_props$onSelectHandle","onSelectHandler","Promise","resolve","_props$onDeselectHand","onDeselectHandler","UserMultipleSelect_FormItem","es_select","showSearch","optionFilterProp","mode","notFoundContent","placeholder","onSelect","onDeselect","getPopupContainer","document","getElementById","search-value","username","first_name","second_name","getFullName","formId","formFields","name","isPublic","participants","owners","hasTimeRestriction","timeFrom","timeTo","hasLocationRestriction","location","locationRadius","defaultPosition","lng","PlayListData","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","tracks","address","position","fieldsToValidate","componentDidMount","settingsStore","getUsers","setState","getDefaultLocation","handleLocationChange","addTrackToList","newTrack","warning","prevState","removeTrackFromListById","removeId","filter","normalizeFormValues","values","_this$state","isCreateForm","body","is_public","place","time_from","time_to","_ref4","handleOk","_this$props","handleSubmit","validateFields","normalizedValues","getFieldsValue","userSelectOnSelect","userRole","_this$props2","playListItem","playlistParticipant","playlistOwner","userSelectOnDeselect","_this$props3","getDefaultDateProp","defaultProps","time","defaultValue","moment","inherits","createClass","_this2","_this$props4","tracksStore","allUsers","toJS","es_form","validateFirst","rules","required","max","FormFields_UserMultipleSelect_UserMultipleSelect","FormFields_SwitchField","date_picker","showTime","format","getCalendarContainer","dateISO","_d","toISOString","touched","lib_default","containerElement","style","height","mapElement","zoom","validator","_","cb","toString","pattern","react","components_PlayList_PlayList","_ref5","components_DzSearch_DzSearch","searchResultTracks","searchTracks","searchAsyncState","Component","PlayListDataForm","create","mapPropsToFields","_newPlayList","_Object$assign","_ref6","newPlayList","playListData","Boolean","createFormField","observer","inject","PlayListModalForm","handleFormSubmit","hideModal","modal","maskClosable","footer","onCancel","wrapClassName","PlayListDataForm_PlayListDataForm","sortByVotesCount","trackA","trackB","LOCATION_CHECK_STATE","pending","fail","success","PlayListPage","playlistEditModalVisible","locationCheckState","wrongLocationShowHostLocation","prevLocationData","hostLocation","serverSocket","playlistLoadedToPlayer","currentTrackPosition","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","match","params","Event","subscribe","handleDzPlayerPositionEvent","loadPlaylistData","WebSocket","addEventListener","handleSocketMessage","checkPlaylistGeolocation","stop","componentWillUnmount","unsubscribe","removeEventListener","close","componentDidUpdate","prevProps","getPlayListDataByIdSafe","_callee2","toastError","history","_args2","_context2","loadFullPlayListData","t0","abrupt","getPlayListData","handleDzTrackRemoveFromQueue","prevTracks","nextTracks","_DZ$player","wasPlaying","isPlaying","currentTrack","getCurrentTrack","trackIndexToPlay","findIndex","pause","play","_callee3","event","prevPlayListTracks","nextPlayListTracks","_window2","prevTrackIds","newTracks","_context3","JSON","parse","_ref7","includes","addToQueue","_ref8","changeTrackOrder","_ref9","_ref10","_x","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","locationDistance","enableHighAccuracy","showEditModal","hideEditModal","setShowHostLocation","handleSubscriptionClick","_callee4","_this$props5","_args4","_context4","playlistUnsubscribe","playlistSubscribe","t1","handleDeletePlayList","_callee5","_this$props6","playListId","_context5","removePlayListById","handlePlaylistUpdate","_ref13","_callee6","_this$props7","_context6","updatePlayList","_x2","_ref14","_callee7","_this$props8","_ref15","_context7","addTrackToPlaylist","_x3","removeTrackById","_ref16","_callee8","trackId","_this$props9","_context8","removeTrackFromPlaylist","_x4","getWrongLocationProps","renderPlaylistView","options","_this$props10","canUserRemoveTrack","owner","creator","spin","spinning","sort","_ref17","popconfirm","okText","onConfirm","_this$props11","_ref18","userSubscribed","isUserOwner","isUserCreator","locationIsValid","subscriptionButton","subscribed","PlayListsPage_PlayListModalForm","authFormFields","UserNameField","_props$fieldName","_props$placeholder","UserNameField_FormItem","UserPasswordField","UserPasswordField_FormItem","min","Password","UserRepeatPasswordField","UserRepeatPasswordField_FormItem","rule","_props$validateToMatc","validateToMatchFieldName","UserEmailField","UserEmailField_FormItem","actionTypeData","_actionTypeData","headerText","formSubmitText","formActionSwitchText","AuthorizationPage","showRegisterSuccessMessage","registeredUserEmail","handleUserRegister","userRegister","handleUserLogin","userLogin","handleFormActionSwitch","_this$props$form","nextActionType","formAction","isRegister","handleConfirm","asyncState","UserAccountFields_UserNameField","UserAccountFields_UserEmailField","UserAccountFields_UserPasswordField","UserAccountFields_UserRepeatPasswordField","AuthorizationPageForm","profileFormFields","firstName","secondName","newPassword","repeatNewPassword","passwordChangeFields","userInfoFields","ProfilePage","handleFormConfirm","isPasswordChange","fieldsToSet","changePassword","updateProfile","finish","authResponse","api","perms","ProfilePageForm","currentUser","react_router_dom","to","restrictionTexts","PlayLists","_PureComponent","searchText","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","onPressEnter","marginBottom","display","icon","size","marginRight","handleReset","filterIcon","filtered","color","onFilter","onFilterDropdownVisibleChange","setTimeout","select","main_default","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","playlists","PureComponent","PlayListsPage","newPlayListModalVisible","getPlayLists","getMyPlaylists","hidePlayListModalForm","handleCreatePlayList","playList","createPlayList","sent","bulkAddTracksToPlaylist","myPlaylists","playLists","components_PlayLists_PlayLists","PlayListEditPage","PlayListEditPage_FormItem","renderProfilePage","pages_ProfilePage_ProfilePage","react_router","renderPlayListsPage","pages_PlayListsPage_PlayListsPage","renderMyPlayListsPage","renderAuthPage","pages_AuthorizationPage","renderPlayListPage","pages_PlayListPage_PlayListPage","renderPlayListEditPage","pages_PlayListEditPage_PlayListEditPage","withRouter","exact","path","sandboxStore","_dec","action","_class","SandboxStore","initializerDefineProperty","_descriptor","_descriptor2","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","newItems","runInAction","axios","Axios","baseURL","timeout","headers","dumbEndPoints","interceptors","request","use","config","url","common","Authorization","reject","apiService","payload","post","patch","playlist","registerFormFields","stores_settingsStore","settingsStore_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","settingsStore_class","SettingsStore","settingsStore_descriptor","settingsStore_descriptor2","_descriptor3","parseRegisterBody","password1","password2","_descriptor4","parseLoginBody","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","flow","formValues","bind","pk","setItem","removeItem","withCallbackToPromise","_window$DZ","deezerApiService","qOptions","parsedQuery","stores_tracksStore","tracksStore_dec","tracksStore_dec2","tracksStore_dec3","tracksStore_class","TracksStore","tracksStore_descriptor","tracksStore_descriptor2","tracksStore_descriptor3","tracksStore_descriptor4","tracksStore_descriptor5","tracksStore_descriptor6","tracksStore_descriptor7","queryOptions","playlistsTracks","defaultPlayListFullData","stores_playlistsStore","playlistsStore_dec","playlistsStore_dec2","playlistsStore_dec3","playlistsStore_dec4","playlistsStore_dec5","playlistsStore_dec6","playlistsStore_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","playlistsStore_class","PlaylistsStore","playlistsStore_descriptor","playlistsStore_descriptor2","playlistsStore_descriptor3","playlistsStore_descriptor4","playlistsStore_descriptor5","playlistsStore_descriptor6","playlistsStore_descriptor7","playlistsStore_descriptor8","playlistsStore_descriptor9","playlistsStore_descriptor10","fullPlayListData","getPlayListDataById","getPlayListById","getMyPlayListById","getPlayListTrackById","playlistData","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","updateData","myPlaylist","set","fullData","extendObservable","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","isDislike","playlistTrack","_args12","_context12","MENU_ITEMS","link","AppHeader","menuOpened","toggleMenuOpened","dynamicProps","menuClassName","activeClassName","onContextMenu","preventDefault","strict","userLogout","configure","enforceActions","isDevelopment","process","basename","App","globalInitiallyLoading","playerExpanded","hasError","getMyUser","catch","finally","init","appId","channelUrl","container","onload","togglePlayerExpanded","index_module","layout","components_AppHeader_AppHeader","router_Routes","hostname","ReactDOM","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ca1dedb.chunk.js","sourcesContent":["export const constImages = {\r\n  albumCoverFallbackUrl: 'https://fallback.png',\r\n};\r\n\r\nexport const webSocketBase = 'wss://musicroom.ml/ws';\r\nexport const WEB_SOCKET_MESSAGE_TYPES = {\r\n  refresh: 'refresh',\r\n  delete: 'delete',\r\n};\r\n\r\nexport const NO_PERMISSIONS_API_MESSAGE = 'You do not have permission to perform this action.';\r\nexport const TRACK_DUPLICATE_API_MESSAGE = 'Track already exists';\r\nexport const GENERAL_ERROR_MESSAGE = 'Something went wrong, please try again later.';\r\nexport const GENERAL_FORM_FIELD_ERROR = 'Field has errors.';\r\n\r\nexport const AUTH_FORM_FIELDS = {\r\n  userName: 'username',\r\n  password: 'password',\r\n  repeatPassword: 'repeatPassword',\r\n  email: 'email',\r\n  formActionType: 'formActionType'\r\n};\r\n\r\nexport const PROFILE_FORM_FIELDS = {\r\n  userName: 'username',\r\n  firstName: 'first_name',\r\n  secondName: 'last_name',\r\n  email: 'email',\r\n\r\n  newPassword: 'new_password1',\r\n  repeatNewPassword: 'new_password2',\r\n};\r\n\r\nexport const PLAY_LIST_DATA_FORM_FIELDS = {\r\n  name: 'name',\r\n  isPublic: 'is_public',\r\n  participants: 'participants',\r\n  owners: 'owners',\r\n  hasTimeRestriction: 'hasTimeRestriction',\r\n  timeFrom: 'time_from',\r\n  timeTo: 'time_to',\r\n  hasLocationRestriction: 'hasLocationRestriction',\r\n  location: 'location',\r\n  locationRadius: 'radius',\r\n};\r\n\r\nexport const AUTH_FORM_ACTION_TYPES = {\r\n  login: 'login',\r\n  register: 'register',\r\n};\r\n\r\nexport const ASYNC_STATE = {\r\n  pending: 'pending',\r\n  done: 'done',\r\n};\r\n\r\nexport const AUTH_LOCAL_STORAGE_FIELDS = {\r\n  token: 'mr-api-token',\r\n  userId: 'mr-user-id',\r\n};\r\n","// @flow\r\nimport { message } from 'antd';\r\nimport get from 'lodash.get';\r\nimport {\r\n  AUTH_LOCAL_STORAGE_FIELDS,\r\n  GENERAL_ERROR_MESSAGE,\r\n  GENERAL_FORM_FIELD_ERROR,\r\n  NO_PERMISSIONS_API_MESSAGE\r\n} from \"./constants\";\r\n\r\nimport type {TLocationCoordinate, TTracksRecord} from \"./types\";\r\n\r\nexport const safeGetCurrentUserId = (): number => {\r\n  const localStoreUserId = Number(localStorage.getItem(AUTH_LOCAL_STORAGE_FIELDS.userId));\r\n\r\n  if (isFinite(localStoreUserId) && !isNaN(localStoreUserId) && localStoreUserId > 0) {\r\n      return localStoreUserId;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const normalizeDzTrackCollection = (tracks): TTracksRecord[] => {\r\n  return tracks.map((trackData) => {\r\n    const { id, readable, title, album, artist, duration } = trackData;\r\n\r\n    return {\r\n      id,\r\n      data: {\r\n        readable,\r\n        id,\r\n        title,\r\n        album: {\r\n          id: album.id,\r\n          title: album.title,\r\n          cover: album.cover,\r\n        },\r\n        artist: {\r\n          id: artist.id,\r\n          name: artist.name,\r\n        },\r\n        duration,\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\r\nexport const generateStringQuery = (length: number = 3) => {\r\n  const res = [];\r\n  const lettersLenght = letters.length;\r\n\r\n  for(let i = 0; i < length; i++) {\r\n    const idx = Math.floor(Math.random() * lettersLenght);\r\n\r\n    res.push(letters[idx]);\r\n  }\r\n\r\n  return res.join('');\r\n};\r\n\r\nexport const degreesToRadians = (degrees: number) => {\r\n  return degrees * Math.PI / 180;\r\n};\r\n\r\nexport const distanceInKmBetweenEarthCoordinates = (first: TLocationCoordinate, second: TLocationCoordinate) => {\r\n  const earthRadiusKm = 6371;\r\n\r\n  const dLat = degreesToRadians(Math.abs(second.lat - first.lat));\r\n  const dLon = degreesToRadians(Math.abs(second.lon - first.lon));\r\n\r\n  const latFirst = degreesToRadians(first.lat);\r\n  const latSecond = degreesToRadians(second.lat);\r\n\r\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(latFirst) * Math.cos(latSecond);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return earthRadiusKm * c;\r\n};\r\n\r\nexport const locationHasChanged = (first: TLocationCoordinate, second: TLocationCoordinate) => {\r\n  if (first && second) {\r\n    if (first.radius !== second.radius) {\r\n      return true;\r\n    } else if (Math.floor(first.lat * 10000) !== Math.floor(second.lat * 10000)) {\r\n      return true;\r\n    } else if (Math.floor(first.lon * 10000) !== Math.floor(second.lon * 10000)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  } else if (!first && !second) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const transferResponseErrorsToForm = (form, e) => {\r\n  const data = get(e.response, 'data');\r\n\r\n  if (data) {\r\n    const fields = Object.entries(data).reduce((acc, [ key, value ]) => {\r\n      const fieldValue = form.getFieldValue(key);\r\n\r\n      if (!fieldValue) {\r\n        return acc;\r\n      }\r\n\r\n      let errorText = GENERAL_FORM_FIELD_ERROR;\r\n\r\n      if (value instanceof String) {\r\n        errorText = value;\r\n      } else if (Array.isArray(value)) {\r\n        errorText = value.join(' ');\r\n      }\r\n\r\n      return {\r\n        ...acc,\r\n        [key]: { value: fieldValue, errors: [ { message: errorText } ] },\r\n      };\r\n    }, {});\r\n\r\n    form.setFields(fields);\r\n  }\r\n};\r\n\r\nexport const handleNonFieldErrors = (e) => {\r\n  const data = get(e.response, 'data') || {};\r\n  console.log(data);\r\n  const errorTexts = get(data, 'non_field_errors') || GENERAL_ERROR_MESSAGE;\r\n\r\n  let errorText = errorTexts;\r\n\r\n  if (Array.isArray(errorTexts)) {\r\n    errorText = errorTexts.join(' ');\r\n  }\r\n\r\n  message.error(errorText);\r\n};\r\n\r\nexport const handleGetApiError = (e) => {\r\n  const [\r\n    status,\r\n    data,\r\n  ] = [\r\n    get(e, ['response', 'status']),\r\n    get(e, ['response', 'data']) || {}\r\n  ];\r\n\r\n  if (status === 403 && data.detail === NO_PERMISSIONS_API_MESSAGE) {\r\n    message.info('You have no access to this content.');\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const noop = () => {};\r\n\r\nexport const localStorageCredentialsPresent = () => {\r\n  const token = localStorage.getItem(AUTH_LOCAL_STORAGE_FIELDS.token);\r\n\r\n  return token && safeGetCurrentUserId();\r\n};\r\n","// @flow\r\nimport React from 'react';\r\nimport { Icon } from 'antd';\r\n\r\nimport './DzPlayTracksActionButton.styles.scss';\r\nimport {noop} from \"../../helpers\";\r\n\r\nconst dzPlayerPlayTracks = (ids: number[], startIndex: number = 0) => {\r\n  if (window.DZ !== undefined && window.DZ.player) {\r\n    window.DZ.player.playTracks(ids, startIndex, (tackObjects) => {\r\n      // window.DZ.player.play();\r\n      // console.log('DZ player is playing now: ');\r\n      // console.log(tackObjects);\r\n    });\r\n  } else {\r\n    console.warn('Deezer player is not present on current page. Sorry for inconvenience.');\r\n  }\r\n};\r\n\r\ntype Props = {\r\n  trackIds: number[],\r\n  startTrackIndex?: number,\r\n  className?: string,\r\n  onClickSideEffect?: () => void,\r\n};\r\n\r\nexport const DzPlayTracksActionButton = (props: Props) => {\r\n  const {\r\n    trackIds = [],\r\n    startTrackIndex = 0,\r\n    className = '',\r\n    onClickSideEffect = noop,\r\n  } = props;\r\n\r\n  return (\r\n    <Icon\r\n      type=\"play-circle\"\r\n      className={`action-icon ${className}`}\r\n      onClick={() => {\r\n        dzPlayerPlayTracks(trackIds, startTrackIndex);\r\n        onClickSideEffect();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DzPlayTracksActionButton;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Icon } from 'antd';\r\n\r\nimport './TrackLikeButton.styles.scss';\r\n\r\ntype Props = {\r\n  iconType: string,\r\n  onClick: () => void,\r\n};\r\n\r\nexport const TrackLikeButton = (props: Props) => (\r\n  <Icon type={props.iconType} onClick={props.onClick} className=\"action-icon\"/>\r\n);\r\n\r\nexport default TrackLikeButton;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Table, Icon, Popover, Button } from 'antd';\r\nimport get from 'lodash.get';\r\n\r\nimport DzPlayTracksActionButton from \"../DzPlayTracksActionButton/DzPlayTracksActionButton\";\r\nimport TrackLikeButton from \"../TrackLikeButton/TrackLikeButton\";\r\nimport {noop, safeGetCurrentUserId} from \"../../helpers\";\r\nimport {constImages} from \"../../constants\";\r\n\r\nimport type {PlaylistsStore} from \"../../../stores/playlistsStore\";\r\n\r\nimport './PlayList.styles.scss';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Artist',\r\n    dataIndex: 'artist',\r\n    key: 'artist',\r\n    width: '15%',\r\n    render: (text, record) => get(record.data, ['artist', 'name'], 'no-artist'),\r\n  },\r\n  {\r\n    title: 'Album',\r\n    dataIndex: 'album',\r\n    key: 'album',\r\n    width: '15%`',\r\n    render: (text, record) => get(record.data, ['album', 'title'], 'no-album'),\r\n  },\r\n  {\r\n    title: 'Album Cover',\r\n    dataIndex: 'albumCover',\r\n    key: 'albumCover',\r\n    width: '15%`',\r\n    render: (text, record) => (\r\n      <img\r\n        alt=\"album-cover\"\r\n        className='album-cover-small'\r\n        src={get(record.data, ['album', 'cover'], constImages.albumCoverFallbackUrl)}\r\n      />\r\n    ),\r\n  },\r\n];\r\nconst paginationConfig = {\r\n  hideOnSinglePage: true,\r\n  showSizeChanger: true,\r\n};\r\n\r\ntype Props = {\r\n  playlistId: number,\r\n  playlistsStore?: PlaylistsStore,\r\n  items: {}[],\r\n  // userStatusOptions: TPlayListUserStatuses,\r\n  withSelectableRows?: boolean,\r\n  selectedItem?: number,\r\n  handleItemSelect?: () => void,\r\n  configureActionColumn: () => {},\r\n  showRatingColumn?: boolean,\r\n  onPlaySideEffect: () => void,\r\n}\r\n\r\nexport const PlayList = (props: Props) => {\r\n  const [ activePopoverId, setActivePopoverId ] = useState(null);\r\n  const {\r\n    playlistId,\r\n    playlistsStore = {},\r\n    items,\r\n    withSelectableRows,\r\n    selectedItem,\r\n    handleItemSelect,\r\n    configureActionColumn,\r\n    showRatingColumn,\r\n    onPlaySideEffect = noop,\r\n  } = props;\r\n\r\n  const dzTrackIds = items.map((item) => item.data.id);\r\n  const actionTitleColumn = {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n    width: '15%',\r\n    render: (text, record, index) => {\r\n      return (\r\n        <div className=\"track-record-title\">\r\n          {get(record.data, 'title', 'no-title')}\r\n          <div className=\"title-play-button\">\r\n            <DzPlayTracksActionButton\r\n              onClickSideEffect={onPlaySideEffect}\r\n              trackIds={dzTrackIds}\r\n              startTrackIndex={index}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    },\r\n  };\r\n\r\n  const columnsWithTitle = [\r\n    actionTitleColumn,\r\n    ...columns,\r\n  ];\r\n\r\n  if (showRatingColumn) {\r\n    columnsWithTitle.push({\r\n      title: 'Rating',\r\n      dataIndex: 'rating',\r\n      key: 'rating',\r\n      className: 'ant-rating-column',\r\n      width: '15%',\r\n      render: (text, record) => {\r\n        const votes = get(record, 'votes', []);\r\n        // TODO: rewrite to use getUserData endpoint to not rely on local storage\r\n        const currentUserId: number = safeGetCurrentUserId();\r\n\r\n        if (!currentUserId) {\r\n          return null;\r\n        }\r\n\r\n        const currentUserLikeObject = votes.find(({ user }) => Number(user) === currentUserId);\r\n\r\n        const buttonProps = currentUserLikeObject ? {\r\n          iconType: 'dislike',\r\n          onClick: () => playlistsStore.voteTrack(record.id, playlistId, true),\r\n        } : {\r\n          iconType: 'like',\r\n          onClick: () => playlistsStore.voteTrack(record.id, playlistId),\r\n        };\r\n\r\n        return (\r\n          <div className=\"track-record-rating\">\r\n            <span className=\"track-rating-likes\">{votes.length}</span>\r\n            <TrackLikeButton {...buttonProps}/>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  const columnsWithAction = [\r\n    ...columnsWithTitle,\r\n    configureActionColumn ?\r\n      configureActionColumn(activePopoverId, setActivePopoverId) :\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        width: '15%`',\r\n        render: ({ id }) => (\r\n        <Popover\r\n          content={\r\n            <div>\r\n              <p>Select playlist</p>\r\n              {/*<PlayListSelectField playlists={playlists}/>*/}\r\n              <Button type=\"primary\" onClick={() => console.log('Add to selected playlist')}>\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          arrowPointAtCenter={true}\r\n          title=\"Title\"\r\n          trigger=\"click\"\r\n          visible={id === activePopoverId}\r\n          onVisibleChange={(visible) => setActivePopoverId(visible ? id : null)}\r\n        >\r\n          <Icon type=\"plus-circle\" className=\"action-icon\"/>\r\n        </Popover>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const additionalProps = withSelectableRows ? {\r\n    onRow: (record) => ({\r\n      onClick: () => handleItemSelect(record.id),\r\n    }),\r\n  } : {};\r\n\r\n  return (\r\n    <Table\r\n      rowKey={record => `track-item-${record.id}`}\r\n      columns={columnsWithAction}\r\n      dataSource={items}\r\n      rowClassName={(record) => {\r\n        // TODO: use classnames here\r\n        if (withSelectableRows && record.id === selectedItem) {\r\n          return 'track-record active'\r\n        }\r\n\r\n        return 'track-record';\r\n      }}\r\n      {...additionalProps}\r\n      pagination={paginationConfig}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","// @flow\r\nimport React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\n\r\nimport type {TDzSearchOptions} from \"../../types\";\r\n\r\nimport \"./DzSearch.styles.scss\";\r\n\r\ntype Props = {\r\n  renderItems: () => React.node,\r\n  handleSearch: (options: TDzSearchOptions) => void,\r\n  searchIsLoading: boolean,\r\n};\r\n\r\nexport const DzSearch = (props: Props) => {\r\n  const [ query, setQuery ] = useState('');\r\n  const { renderItems, searchIsLoading, handleSearch } = props;\r\n\r\n  const handleInputChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const parseQuery = (): TDzSearchOptions => {\r\n    if (!query) {\r\n      return null;\r\n    }\r\n\r\n    const queryObject: TDzSearchOptions = {};\r\n    const parts = query.split('&&').map(v => v.trim());\r\n\r\n    for (let searchPart of parts) {\r\n      const keyValuePair = searchPart.split(\":\").map(v => v.trim().toLowerCase());\r\n\r\n      if (keyValuePair.length === 1) {\r\n        const [value] = keyValuePair;\r\n\r\n        Object.assign(queryObject, { track: value });\r\n      }\r\n\r\n      if (keyValuePair.length === 2) {\r\n        const [key, value] = keyValuePair;\r\n\r\n        Object.assign(queryObject, { [key]: value });\r\n      }\r\n    }\r\n\r\n    return queryObject;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dz-search-container\">\r\n      <div className=\"dz-search-bar\">\r\n        <Input onChange={handleInputChange} value={query}/>\r\n        <Button\r\n          loading={searchIsLoading}\r\n          disabled={searchIsLoading}\r\n          onClick={() => {\r\n            const queryObject = parseQuery();\r\n\r\n            if (queryObject) {\r\n              handleSearch(queryObject);\r\n            }\r\n          }}\r\n        >\r\n          Fetch\r\n        </Button>\r\n      </div>\r\n      { renderItems() }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DzSearch;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Switch, Form } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\ntype Props = {\r\n  form: {},\r\n  label: string | React.node,\r\n  fieldName: string,\r\n};\r\n\r\nexport const SwitchField = (props: Props) => {\r\n  const {\r\n    label,\r\n    fieldName,\r\n    form: {\r\n      getFieldDecorator,\r\n      getFieldValue,\r\n      setFieldsValue,\r\n    }\r\n  } = props;\r\n\r\n  getFieldDecorator(fieldName);\r\n\r\n  return (\r\n    <FormItem label={label}>\r\n      <Switch\r\n        checked={getFieldValue(fieldName)}\r\n        onClick={(value) => setFieldsValue({ [fieldName]: value })}\r\n      />\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport default SwitchField;","// @flow\r\nimport React from 'react';\r\nimport { Select, Form } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { Item: FormItem } = Form;\r\n\r\ntype Props = {\r\n  users: [],\r\n  form: {},\r\n  formFieldName: string,\r\n  label: string | React.node,\r\n  rules?: {}[],\r\n  onSelectHandler: () => Promise<any>,\r\n  onDeselectHandler: () => Promise<any>,\r\n};\r\n\r\nconst UserMultipleSelect = (props: Props) => {\r\n  const {\r\n    form: {\r\n      getFieldValue,\r\n      // setFieldsValue,\r\n      getFieldDecorator,\r\n    },\r\n    users,\r\n    formFieldName,\r\n    label,\r\n    onSelectHandler = () => Promise.resolve(),\r\n    onDeselectHandler = () => Promise.resolve(),\r\n  } = props;\r\n\r\n  const getFullName = (user) => {\r\n    const { first_name, second_name } = user;\r\n    let title = first_name || second_name;\r\n\r\n    if (!(first_name || second_name)) {\r\n      title = 'Name is not specified';\r\n    } else if (first_name && second_name) {\r\n      title = `${first_name} ${second_name}`;\r\n    }\r\n\r\n    return title;\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    // const prevValues = getFieldValue(formFieldName);\r\n\r\n    onSelectHandler(Number(value));\r\n    // onSelectHandler(Number(value))\r\n    //   .then(() => setFieldsValue({ [formFieldName]: [...prevValues, value] }))\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleDeselect = (value) => {\r\n    // const prevValues = getFieldValue(formFieldName);\r\n\r\n\r\n    onDeselectHandler(Number(value));\r\n    // onDeselectHandler(Number(value))\r\n    //   .then(() => setFieldsValue({ [formFieldName]: prevValues.filter(v => v !== value) }))\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  getFieldDecorator(formFieldName);\r\n\r\n  return (\r\n    <div id={`form-field-${formFieldName}`}>\r\n      <FormItem label={label}>\r\n        <Select\r\n          value={getFieldValue(formFieldName)}\r\n          showSearch={true}\r\n          optionFilterProp=\"search-value\"\r\n          mode=\"multiple\"\r\n          notFoundContent=\"No users found...\"\r\n          placeholder=\"Select users...\"\r\n          onSelect={handleSelect}\r\n          onDeselect={handleDeselect}\r\n          getPopupContainer={() => document.getElementById(`form-field-${formFieldName}`)}\r\n        >\r\n          {users.map((user) => (\r\n            <Option key={user.id} search-value={user.username} title={getFullName(user)} value={user.id}>\r\n              {user.username}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </FormItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMultipleSelect;\r\n","// @flow\r\nimport React, {Component, Fragment} from 'react';\r\nimport {Form, Button, Input, DatePicker, Icon, message} from 'antd';\r\nimport { toJS } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport LocationPicker from 'react-location-picker';\r\nimport moment from 'moment';\r\nimport get from 'lodash.get';\r\n\r\nimport SwitchField from \"../FormFields/SwitchField\";\r\nimport DzSearch from \"../DzSearch/DzSearch\";\r\nimport PlayList from \"../PlayList/PlayList\";\r\nimport UserMultipleSelect from \"../FormFields/UserMultipleSelect/UserMultipleSelect\";\r\n\r\nimport {ASYNC_STATE, PLAY_LIST_DATA_FORM_FIELDS} from \"../../constants\";\r\n\r\nimport type {TracksStore} from \"../../../stores/tracksStore\";\r\nimport type {SettingsStore} from \"../../../stores/settingsStore\";\r\nimport type {TTracksRecord} from \"../../types\";\r\nimport type {PlaylistsStore} from \"../../../stores/playlistsStore\";\r\n\r\nconst formId = 'play-list-data-form';\r\nconst formFields = PLAY_LIST_DATA_FORM_FIELDS;\r\n\r\nconst defaultPosition = { lat: 50.4507, lng: 30.5230 };\r\n\r\ntype Props = {\r\n  isCreateForm?: boolean,\r\n  playListItem?: {},\r\n  handleSubmit: () => void,\r\n  tracksStore: TracksStore,\r\n  settingsStore: SettingsStore,\r\n  playlistsStore: PlaylistsStore,\r\n};\r\ntype State = {\r\n  tracks: TTracksRecord[],\r\n\r\n  address: string,\r\n  position: {\r\n    lat: number,\r\n    lng: number,\r\n  },\r\n};\r\n\r\nexport class PlayListData extends Component<Props, State> {\r\n  state = {\r\n    tracks: [],\r\n    address: \"Maidan Nezalezhnosti, 2, Kyiv, Ukraine, 02000\",\r\n    position: {\r\n      ...defaultPosition\r\n    },\r\n  };\r\n\r\n  fieldsToValidate = [formFields.name, formFields.locationRadius];\r\n\r\n  componentDidMount = () => {\r\n    const { settingsStore } = this.props;\r\n\r\n    settingsStore.getUsers();\r\n\r\n    this.setState({\r\n      position: this.getDefaultLocation(),\r\n    });\r\n  };\r\n\r\n  handleLocationChange = ({ position, address }) => {\r\n    this.setState({ position, address });\r\n  };\r\n\r\n  addTrackToList = (newTrack: TTracksRecord) => {\r\n    const { tracks } = this.state;\r\n    const trackItem = tracks.find(({ id }) => id === newTrack.id);\r\n\r\n    if (trackItem) {\r\n      message.warning('Tracks duplicates are forbidden.');\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        tracks: [\r\n          ...prevState.tracks,\r\n          newTrack,\r\n        ],\r\n      }));\r\n    }\r\n  };\r\n\r\n  removeTrackFromListById = (removeId: number) => {\r\n    this.setState((prevState) => ({\r\n      tracks: prevState.tracks.filter(({ id }) => id !== removeId),\r\n    }))\r\n  };\r\n\r\n  normalizeFormValues = (values) => {\r\n    const { tracks, position } = this.state;\r\n    const { isCreateForm } = this.props;\r\n\r\n    const body = {\r\n      name: values[formFields.name],\r\n      is_public: values[formFields.isPublic],\r\n      place: values[formFields.hasLocationRestriction] ?\r\n        {\r\n          lat: Number(position.lat),\r\n          lon: Number(position.lng),\r\n          radius: Number(values[formFields.locationRadius])\r\n        } :\r\n        null,\r\n      ...(values[formFields.hasTimeRestriction] ? {\r\n        time_from: values[formFields.timeFrom],\r\n        time_to: values[formFields.timeTo],\r\n      } : {\r\n        time_from: null,\r\n        time_to: null,\r\n      })\r\n    };\r\n\r\n    if (!isCreateForm) {\r\n      return body;\r\n    }\r\n\r\n    Object.assign(body, {\r\n      tracks: tracks.map(({ data }) => data),\r\n    });\r\n\r\n    return body;\r\n  };\r\n\r\n  handleOk = () => {\r\n    const { form, handleSubmit } = this.props;\r\n\r\n    form.validateFields(this.fieldsToValidate, (errors) => {\r\n      if (!errors) {\r\n        const normalizedValues = this.normalizeFormValues(form.getFieldsValue());\r\n\r\n        handleSubmit(normalizedValues);\r\n      }\r\n    })\r\n  };\r\n\r\n  userSelectOnSelect = (userRole) => (userId: number) => {\r\n    const {\r\n      isCreateForm,\r\n      playlistsStore,\r\n      playListItem,\r\n    } = this.props;\r\n\r\n    if (!isCreateForm) {\r\n      if (userRole === 'participant') {\r\n        return playlistsStore.playlistParticipant(playListItem.id, userId, 'add')\r\n      } else if (userRole === 'owner') {\r\n        return playlistsStore.playlistOwner(playListItem.id, userId, 'add');\r\n      }\r\n    }\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  userSelectOnDeselect = (userRole) => (userId: number) => {\r\n    const {\r\n      isCreateForm,\r\n      playlistsStore,\r\n      playListItem,\r\n    } = this.props;\r\n\r\n    if (!isCreateForm) {\r\n      if (userRole === 'participant') {\r\n        return playlistsStore.playlistParticipant(playListItem.id, userId, 'remove')\r\n      } else if (userRole === 'owner') {\r\n        return playlistsStore.playlistOwner(playListItem.id, userId, 'remove');\r\n      }\r\n    }\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  getDefaultLocation = () => {\r\n    const { playListItem } = this.props;\r\n\r\n    const [lat, lng] = [\r\n      get(playListItem, ['place', 'lat']) || defaultPosition.lat,\r\n      get(playListItem, ['place', 'lon']) || defaultPosition.lng,\r\n    ];\r\n\r\n    return { lat, lng };\r\n  };\r\n\r\n  getDefaultDateProp = (fieldName) => {\r\n    const { playListItem } = this.props;\r\n    const defaultProps = {};\r\n    const time = get(playListItem, fieldName, undefined);\r\n\r\n    // TODO: check for unsafe moment parse\r\n    if (time) {\r\n      Object.assign(defaultProps, { defaultValue: moment(time) });\r\n    }\r\n\r\n    return defaultProps;\r\n  };\r\n\r\n  render() {\r\n    const { tracks } = this.state;\r\n    const { form, tracksStore, settingsStore, isCreateForm } = this.props;\r\n\r\n    const hasTimeRestriction = form.getFieldValue(formFields.hasTimeRestriction);\r\n    const hasLocationRestriction = form.getFieldValue(formFields.hasLocationRestriction);\r\n\r\n    if (hasLocationRestriction) {\r\n      this.fieldsToValidate = [formFields.name, formFields.locationRadius];\r\n    } else {\r\n      this.fieldsToValidate = [formFields.name];\r\n    }\r\n\r\n    form.getFieldDecorator(formFields.timeFrom);\r\n    form.getFieldDecorator(formFields.timeTo);\r\n\r\n    const allUsers = toJS(settingsStore.allUsers);\r\n\r\n    form.getFieldDecorator(formFields.participants);\r\n\r\n    return (\r\n      <Form id={formId}>\r\n        <Form.Item label=\"Playlist name:\">\r\n          {form.getFieldDecorator(formFields.name, {\r\n            validateFirst: true,\r\n            rules: [\r\n              { required: true, message: 'Name is required.' },\r\n              { max: 255, message: 'Maximum length is 255 symbols.' },\r\n            ]\r\n          })(\r\n            <Input placeholder=\"Name your playlist...\"/>\r\n          )}\r\n        </Form.Item>\r\n\r\n        {!isCreateForm && (\r\n          <UserMultipleSelect\r\n            users={allUsers}\r\n            form={form}\r\n            formFieldName={formFields.participants}\r\n            label=\"Participants:\"\r\n            onSelectHandler={this.userSelectOnSelect('participant')}\r\n            onDeselectHandler={this.userSelectOnDeselect('participant')}\r\n          />\r\n        )}\r\n\r\n        {!isCreateForm && (\r\n          <UserMultipleSelect\r\n            users={allUsers}\r\n            form={form}\r\n            formFieldName={formFields.owners}\r\n            label=\"Participants with owner permissions:\"\r\n            onSelectHandler={this.userSelectOnSelect('owner')}\r\n            onDeselectHandler={this.userSelectOnDeselect('owner')}\r\n          />\r\n        )}\r\n\r\n        <SwitchField\r\n          form={form}\r\n          label=\"Check if your playlist is public\"\r\n          fieldName={formFields.isPublic}\r\n        />\r\n\r\n        <SwitchField\r\n          form={form}\r\n          label=\"Time restricted\"\r\n          fieldName={formFields.hasTimeRestriction}\r\n        />\r\n\r\n        {hasTimeRestriction && (\r\n          <div className='date-range-picker-container'>\r\n            <DatePicker\r\n              showTime={{ format: 'HH:mm' }}\r\n              {...this.getDefaultDateProp(formFields.timeFrom)}\r\n              getCalendarContainer={() => document.getElementById(formId)}\r\n              format=\"YYYY-MM-DD HH:mm\"\r\n              placeholder={'Time From'}\r\n              onChange={(value) => {\r\n                const dateISO = value._d.toISOString();\r\n\r\n                form.setFields({\r\n                  [formFields.timeFrom]: { touched: true, value: dateISO },\r\n                });\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              showTime={{ format: 'HH:mm' }}\r\n              {...this.getDefaultDateProp(formFields.timeTo)}\r\n              getCalendarContainer={() => document.getElementById(formId)}\r\n              format=\"YYYY-MM-DD HH:mm\"\r\n              placeholder={'Time To'}\r\n              onChange={(value) => {\r\n                const dateISO = value._d.toISOString();\r\n\r\n                form.setFields({\r\n                  [formFields.timeTo]: { touched: true, value: dateISO },\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <SwitchField\r\n          form={form}\r\n          label=\"Location restricted\"\r\n          fieldName={formFields.hasLocationRestriction}\r\n        />\r\n\r\n        <div className={`location-picker-container${!hasLocationRestriction ? ' hidden' : ''}`}>\r\n          <LocationPicker\r\n            containerElement={ <div style={ {height: '100%'} } /> }\r\n            mapElement={ <div style={ {height: '400px'} } /> }\r\n            defaultPosition={this.getDefaultLocation()}\r\n            onChange={this.handleLocationChange}\r\n            radius={Number(form.getFieldValue(formFields.locationRadius)) || 100}\r\n            zoom={17}\r\n          />\r\n\r\n          <Form.Item label=\"Availability radius:\">\r\n            {form.getFieldDecorator(formFields.locationRadius, {\r\n              validateFirst: true,\r\n              rules: [\r\n                { validator: (_, value, cb) => {\r\n                    value.toString().length > 5 ? cb(true) : cb();\r\n                  }, message: 'Maximum length is 5 symbols.' },\r\n                { pattern: /^\\d+$/, message: 'Must be a positive integer.' },\r\n                { validator: (_, value, cb) => {\r\n                    Number(value) < 25 ? cb(true) : cb();\r\n                  },\r\n                  message: 'Must be at least 25 meters.'\r\n                }\r\n              ]\r\n            })(\r\n              <Input\r\n                placeholder=\"Availability radius...\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        </div>\r\n\r\n        {/* Added to playlist tracks */}\r\n        {isCreateForm && (\r\n          <Fragment>\r\n            <PlayList\r\n              playlistId={null}\r\n              items={tracks}\r\n              configureActionColumn={() => ({\r\n                title: 'Action',\r\n                key: 'action',\r\n                width: '15%`',\r\n                className: 'ant-actions-column',\r\n                render: ({ id }) => (\r\n                  <div className=\"actions-container\">\r\n                    <Icon type=\"minus-circle\" className=\"action-icon\" onClick={() => this.removeTrackFromListById(id)}/>\r\n                  </div>\r\n                ),\r\n              })}\r\n            />\r\n\r\n            <DzSearch\r\n              renderItems={() => (\r\n                <PlayList\r\n                  playlistId={null}\r\n                  items={tracksStore.searchResultTracks}\r\n                  configureActionColumn={() => ({\r\n                    title: 'Action',\r\n                    key: 'action',\r\n                    width: '15%`',\r\n                    className: 'ant-actions-column',\r\n                    render: (record) => (\r\n                      <div className=\"actions-container\">\r\n                        <Icon type=\"plus-circle\" className=\"action-icon\" onClick={() => this.addTrackToList(record)}/>\r\n                      </div>\r\n                    ),\r\n                  })}\r\n                />\r\n              )}\r\n              handleSearch={tracksStore.searchTracks}\r\n              searchIsLoading={tracksStore.searchAsyncState === ASYNC_STATE.pending}\r\n            />\r\n          </Fragment>\r\n        )}\r\n\r\n        <Button type=\"primary\" onClick={this.handleOk}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapPropsToFields = (props: Props) => {\r\n  const { playListItem } = props;\r\n  const {\r\n    name,\r\n    participants,\r\n    owners,\r\n    hasTimeRestriction,\r\n    timeFrom,\r\n    timeTo,\r\n    isPublic,\r\n    hasLocationRestriction,\r\n    locationRadius,\r\n  } = formFields;\r\n\r\n  const newPlayList = {\r\n    [name]: 'Test Play Lists Name',\r\n    [isPublic]: true,\r\n    [owners]: [],\r\n    [participants]: [],\r\n    [hasTimeRestriction]: false,\r\n    [timeFrom]: null,\r\n    [timeTo]: null,\r\n    [hasLocationRestriction]: false,\r\n    [locationRadius]: 100,\r\n  };\r\n\r\n  const playListData = (playListItem && playListItem instanceof Object) ?\r\n    Object.assign({}, newPlayList, playListItem, {\r\n      [hasLocationRestriction]: Boolean(playListItem.place),\r\n      [hasTimeRestriction]: Boolean(playListItem.time_from) || Boolean(playListItem.time_to),\r\n      [locationRadius]: get(playListItem, ['place', 'radius'], 100),\r\n    }) :\r\n    newPlayList;\r\n\r\n  return {\r\n    [name]: Form.createFormField({ value: playListData[name] }),\r\n    [isPublic]: Form.createFormField({ value: playListData[isPublic] }),\r\n    [owners]: Form.createFormField({ value: playListData[owners] }),\r\n    [participants]: Form.createFormField({ value: playListData[participants] }),\r\n    [hasTimeRestriction]: Form.createFormField({ value: playListData[hasTimeRestriction] }),\r\n    [timeFrom]: Form.createFormField({ value: playListData[timeFrom] }),\r\n    [timeTo]: Form.createFormField({ value: playListData[timeTo] }),\r\n    [hasLocationRestriction]: Form.createFormField({ value: playListData[hasLocationRestriction] }),\r\n    [locationRadius]: Form.createFormField({ value: playListData[locationRadius] }),\r\n  };\r\n};\r\n\r\nconst PlayListDataForm = Form.create({\r\n  mapPropsToFields,\r\n})(observer(PlayListData));\r\n\r\nexport default inject('playlistsStore', 'tracksStore', 'settingsStore')(\r\n  observer(PlayListDataForm)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport PlayListDataForm from \"../../common/components/PlayListDataForm/PlayListDataForm\";\r\n\r\ntype Props = {\r\n  visible: boolean,\r\n  hideModal: () => void,\r\n  handleOk: () => void,\r\n  isCreateForm: boolean,\r\n  playListItem?: {},\r\n};\r\n\r\nexport class PlayListModalForm extends Component<Props> {\r\n  handleFormSubmit = (values) => {\r\n    const { hideModal, handleOk } = this.props;\r\n    // console.log('This is form submit handler');\r\n    // console.log(values);\r\n\r\n    handleOk(values);\r\n    hideModal();\r\n  };\r\n\r\n  render() {\r\n    const { visible, hideModal, isCreateForm, playListItem } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        visible={visible}\r\n        maskClosable={false}\r\n        footer={null}\r\n        onCancel={hideModal}\r\n        wrapClassName=\"avoid-dz-player-modal custom-scroll-bar\"\r\n        width='80vw'\r\n      >\r\n        <h2>{isCreateForm ? 'New Playlist' : 'Edit Playlist'}</h2>\r\n        <PlayListDataForm\r\n          isCreateForm={isCreateForm}\r\n          playListItem={playListItem}\r\n          handleSubmit={this.handleFormSubmit}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayListModalForm;\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Button, Icon, message, Popconfirm, Spin } from 'antd';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport LocationPicker from \"react-location-picker\";\r\nimport get from 'lodash.get';\r\n\r\nimport PlayList from \"../../common/components/PlayList/PlayList\";\r\nimport DzSearch from \"../../common/components/DzSearch/DzSearch\";\r\nimport DzPlayTracksActionButton from \"../../common/components/DzPlayTracksActionButton/DzPlayTracksActionButton\";\r\nimport PlayListModalForm from \"../PlayListsPage/PlayListModalForm\";\r\n\r\nimport {distanceInKmBetweenEarthCoordinates, handleGetApiError, locationHasChanged} from \"../../common/helpers\";\r\nimport {\r\n  ASYNC_STATE,\r\n  AUTH_LOCAL_STORAGE_FIELDS,\r\n  TRACK_DUPLICATE_API_MESSAGE,\r\n  WEB_SOCKET_MESSAGE_TYPES,\r\n  webSocketBase\r\n} from \"../../common/constants\";\r\n\r\nimport type {PlaylistsStore} from \"../../stores/playlistsStore\";\r\nimport type {SettingsStore} from \"../../stores/settingsStore\";\r\nimport type {TracksStore} from \"../../stores/tracksStore\";\r\nimport type {TLocationCoordinate, TPlayListUserStatuses, TTracksRecord} from \"../../common/types\";\r\n\r\nimport './PlaylListPage.styles.scss';\r\n\r\nconst sortByVotesCount = (trackA, trackB) => {\r\n  return trackB.votes.length - trackA.votes.length;\r\n};\r\n\r\nconst LOCATION_CHECK_STATE = {\r\n  pending: 0,\r\n  fail: -1,\r\n  success: 1,\r\n};\r\ntype Props = {\r\n  playlistsStore: PlaylistsStore,\r\n  settingsStore: SettingsStore,\r\n  tracksStore: TracksStore,\r\n};\r\ntype State = {\r\n  playlistEditModalVisible: boolean,\r\n  locationCheckState: $Values<LOCATION_CHECK_STATE>,\r\n\r\n  wrongLocationShowHostLocation: boolean,\r\n};\r\nexport class PlayListPage extends Component<Props, State> {\r\n  state = {\r\n    playlistEditModalVisible: false,\r\n    locationCheckState: LOCATION_CHECK_STATE.pending,\r\n    wrongLocationShowHostLocation: false,\r\n  };\r\n\r\n  prevLocationData = null;\r\n  hostLocation = null;\r\n\r\n  serverSocket = null;\r\n  playlistLoadedToPlayer = false;\r\n\r\n  currentTrackPosition = null;\r\n\r\n  componentDidMount = async (): void  => {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n\r\n    window.DZ.Event.subscribe('player_position', this.handleDzPlayerPositionEvent);\r\n    // window.DZ.Event.unsubscribe();\r\n\r\n    await this.loadPlaylistData(true);\r\n\r\n    this.serverSocket = new WebSocket(`${webSocketBase}/playlist/${id}/`);\r\n\r\n    // this.serverSocket.addEventListener('open', () => {\r\n    //   console.log('Playlist Socket Opened');\r\n    // });\r\n\r\n    this.serverSocket.addEventListener('message', this.handleSocketMessage);\r\n\r\n    // this.serverSocket.addEventListener('close', () => {\r\n    //   console.log('Playlist Socket Closed');\r\n    // });\r\n\r\n    this.checkPlaylistGeolocation();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.DZ.Event.unsubscribe('player_position', this.handleDzPlayerPositionEvent);\r\n\r\n    if (this.serverSocket) {\r\n      this.serverSocket.removeEventListener('message', this.handleSocketMessage);\r\n      this.serverSocket.close();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = (prevProps): void => {\r\n    const {\r\n      playlistsStore,\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n\r\n    const playListData = toJS(playlistsStore.getPlayListDataByIdSafe(id));\r\n\r\n    if (playListData.place) {\r\n      if (!this.prevLocationData) {\r\n        this.checkPlaylistGeolocation();\r\n      } else if (locationHasChanged(playListData.place, this.prevLocationData)) {\r\n        this.checkPlaylistGeolocation();\r\n      }\r\n    }\r\n\r\n    this.prevLocationData = playListData.place || null;\r\n  };\r\n\r\n  handleDzPlayerPositionEvent = (data) => {\r\n    this.currentTrackPosition = data[0] || 0;\r\n  };\r\n\r\n  loadPlaylistData = async (toastError = false) => {\r\n    const {\r\n      playlistsStore,\r\n      history,\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n\r\n    try {\r\n      await playlistsStore.loadFullPlayListData(id);\r\n    } catch(e) {\r\n      if (handleGetApiError(e)) {\r\n        history.push('/playlists');\r\n\r\n        return;\r\n      }\r\n\r\n      if (toastError) {\r\n        message.error('Error loading playlist data. Please try again later.');\r\n      } else {\r\n        console.warn('Error loading playlist data. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n\r\n  getPlayListData = () => {\r\n    const {\r\n      playlistsStore,\r\n      match: { params: { id } }\r\n    } = this.props;\r\n    const playlistId = Number(id);\r\n\r\n    return toJS(playlistsStore.getPlayListDataByIdSafe(playlistId));\r\n  };\r\n\r\n  handleDzTrackRemoveFromQueue = (prevTracks, nextTracks) => {\r\n    const { DZ } = window;\r\n\r\n    const wasPlaying = DZ.player.isPlaying();\r\n    const currentTrack = DZ.player.getCurrentTrack();\r\n\r\n    // console.log(wasPlaying);\r\n    // console.log(currentTrack);\r\n    // console.log(this.currentTrackPosition);\r\n    // console.log(currentTrack);\r\n    // console.log(nextTracks);\r\n    const trackIndexToPlay = nextTracks.findIndex(({ data }) => Number(data.id) === Number(currentTrack.id));\r\n    // console.log('Index: ', trackIndexToPlay);\r\n\r\n    DZ.player.pause();\r\n    DZ.player.playTracks(\r\n      nextTracks.map(({ data }) => data.id),\r\n      ...(trackIndexToPlay !== -1 ? [ trackIndexToPlay, this.currentTrackPosition || 0 ] : [0, 0]),\r\n      () => {\r\n        // console.log('After Remove Track Play Started');\r\n        if (wasPlaying) {\r\n          DZ.player.play();\r\n        } else {\r\n          DZ.player.pause();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSocketMessage = async (event) => {\r\n    try {\r\n      const data = JSON.parse(get(event, ['data']) || '{}');\r\n\r\n      if (data.message === WEB_SOCKET_MESSAGE_TYPES.refresh) {\r\n        const prevPlayListTracks = get(this.getPlayListData(), 'tracks') || [];\r\n\r\n        // console.log('Refreshing Playlist');\r\n        await this.loadPlaylistData();\r\n\r\n        if (this.playlistLoadedToPlayer) {\r\n          const nextPlayListTracks = get(this.getPlayListData(), 'tracks') || [];\r\n          const { DZ } = window;\r\n\r\n          // console.log(prevPlayListTracks);\r\n          // console.log(nextPlayListTracks);\r\n          if (nextPlayListTracks.length > prevPlayListTracks.length) {\r\n            const prevTrackIds = prevPlayListTracks.map(({ id }) => id);\r\n            const newTracks = nextPlayListTracks.filter(({ id }) => !prevTrackIds.includes(id));\r\n\r\n            // TODO: unsafe DZ usage\r\n            DZ.player.addToQueue(newTracks.map(({ data }) => data.id), () => {\r\n              DZ.player.changeTrackOrder(nextPlayListTracks.map(({ data }) => data.id));\r\n            });\r\n          } else if (nextPlayListTracks.length < prevPlayListTracks.length) {\r\n            this.handleDzTrackRemoveFromQueue(prevPlayListTracks, nextPlayListTracks);\r\n          } else {\r\n            // TODO: unsafe DZ usage\r\n            DZ.player.changeTrackOrder(nextPlayListTracks.map(({ data }) => data.id));\r\n          }\r\n        }\r\n      } else if (data.message === WEB_SOCKET_MESSAGE_TYPES.delete) {\r\n        if (this.serverSocket) {\r\n          this.serverSocket.close();\r\n        }\r\n\r\n        message.info('Playlist was deleted.');\r\n\r\n        this.props.history.push('/playlists');\r\n      }\r\n    } catch(e) {\r\n      console.warn('Web Socket message processing error.');\r\n    }\r\n  };\r\n\r\n  checkPlaylistGeolocation = () => {\r\n    const {\r\n      playlistsStore,\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n\r\n    const playListData = toJS(playlistsStore.getPlayListDataByIdSafe(id));\r\n\r\n    this.prevLocationData = playListData.place;\r\n\r\n    if (playListData.place) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const first = {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude,\r\n        };\r\n        this.hostLocation = first;\r\n        // console.log(this.hostLocation);\r\n        const second = playListData.place;\r\n\r\n        const locationDistance = distanceInKmBetweenEarthCoordinates(second, first) * 1000;\r\n\r\n        this.setState({\r\n          locationCheckState: (locationDistance <= playListData.place.radius) ?\r\n            LOCATION_CHECK_STATE.success :\r\n            LOCATION_CHECK_STATE.fail,\r\n        });\r\n      }, (error) => {\r\n        console.warn(\"Unable to read your geolocation.\");\r\n        this.setState({ locationCheckState: LOCATION_CHECK_STATE.fail });\r\n      }, {\r\n        enableHighAccuracy: true,\r\n      });\r\n    } else {\r\n      this.setState({ locationCheckState: LOCATION_CHECK_STATE.success });\r\n    }\r\n  };\r\n\r\n  showEditModal = () => this.setState({ playlistEditModalVisible: true });\r\n\r\n  hideEditModal = () => this.setState({ playlistEditModalVisible: false });\r\n\r\n  setShowHostLocation = (a: boolean) => this.setState({ wrongLocationShowHostLocation: a });\r\n\r\n  handleSubscriptionClick = async (unsubscribe = false) => {\r\n    const {\r\n      playlistsStore,\r\n      match: { params: { id } }\r\n    } = this.props;\r\n    const playlistId = Number(id);\r\n    const currentUserId = Number(localStorage.getItem(AUTH_LOCAL_STORAGE_FIELDS.userId));\r\n    const currentUserIdIsValid = isFinite(currentUserId) && !isNaN(currentUserId);\r\n\r\n    if (!currentUserIdIsValid) {\r\n      message.error(\"Auth data malformed. Please repeat login.\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (unsubscribe) {\r\n      try {\r\n        await playlistsStore.playlistUnsubscribe(playlistId, currentUserId);\r\n      } catch(e) {\r\n        message.error('Error proceeding un-subscription.');\r\n      }\r\n    } else {\r\n      try {\r\n        await playlistsStore.playlistSubscribe(playlistId, currentUserId, 'add');\r\n      } catch(e) {\r\n        message.error('Error proceeding subscription.');\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeletePlayList = async () => {\r\n    const {\r\n      playlistsStore,\r\n      history,\r\n      match: { params: { id: playListId } }\r\n    } = this.props;\r\n\r\n    try {\r\n      await playlistsStore.removePlayListById(Number(playListId));\r\n\r\n      history.push('/playlists');\r\n    } catch (e) {\r\n      message.error(`Can't delete play list.`);\r\n    }\r\n  };\r\n\r\n  handlePlaylistUpdate = async (values) => {\r\n    const {\r\n      playlistsStore,\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    const playlistId = Number(id);\r\n\r\n    this.setShowHostLocation(false);\r\n\r\n    try {\r\n      await playlistsStore.updatePlayList(Number(playlistId), values);\r\n\r\n      message.success('Playlist updated.');\r\n\r\n      // this.checkPlaylistGeolocation();\r\n    } catch(e) {\r\n      message.error('Error updating play list. Please try again later.');\r\n      throw (e);\r\n    }\r\n  };\r\n\r\n  addTrackToList = async (track: TTracksRecord) => {\r\n    const {\r\n      playlistsStore,\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    const playlistId = Number(id);\r\n\r\n    try {\r\n      await playlistsStore.addTrackToPlaylist(playlistId, toJS(track.data));\r\n    } catch(e) {\r\n\r\n      const [ status, data ] = [ get(e, ['response', 'status']), get(e, ['response', 'data']) || {} ];\r\n\r\n      if (status === 302 && data.detail === TRACK_DUPLICATE_API_MESSAGE) {\r\n        message.warning('Track duplicates are forbidden.');\r\n      } else {\r\n        message.error('Error adding track to playlist.');\r\n      }\r\n    }\r\n  };\r\n\r\n  removeTrackById = async (trackId: number) => {\r\n    const {\r\n      playlistsStore,\r\n      match: { params: { id } }\r\n    } = this.props;\r\n    const playlistId = Number(id);\r\n\r\n    try {\r\n      await playlistsStore.removeTrackFromPlaylist(playlistId, trackId);\r\n    } catch(e) {\r\n      message.error('Error removing track.');\r\n    }\r\n  };\r\n\r\n  getWrongLocationProps = (place: TLocationCoordinate) => {\r\n    const { wrongLocationShowHostLocation } = this.state;\r\n    const { lat, lon, radius } = place;\r\n\r\n    return wrongLocationShowHostLocation ? {\r\n      radius: -1,\r\n      defaultPosition: {\r\n        lat: this.hostLocation.lat,\r\n        lng: this.hostLocation.lon,\r\n      },\r\n    } : {\r\n      radius: Number(radius) || -1,\r\n      defaultPosition: {\r\n        lat,\r\n        lng: lon,\r\n      },\r\n    }\r\n  };\r\n\r\n  renderPlaylistView = (tracks, place, options: TPlayListUserStatuses) => {\r\n    const { locationCheckState } = this.state;\r\n    const {\r\n      playlistsStore,\r\n      match: { params: { id: playlistId } }\r\n    } = this.props;\r\n    const canUserRemoveTrack = options.owner || options.creator;\r\n\r\n    if (place && locationCheckState === LOCATION_CHECK_STATE.pending) {\r\n      return (\r\n        <Spin spinning={true}>\r\n          <div className=\"play-list-container empty\">\r\n            Checking location data...\r\n          </div>\r\n        </Spin>\r\n      );\r\n    } else if (place && locationCheckState === LOCATION_CHECK_STATE.fail) {\r\n      return (\r\n        <div>\r\n          <LocationPicker\r\n            containerElement={ <div style={ {height: '100%'} } /> }\r\n            mapElement={ <div style={ {height: '400px'} } /> }\r\n            {...this.getWrongLocationProps(place)}\r\n            onChange={() => {}}\r\n            zoom={15}\r\n          />\r\n          <div className='wrong-location-info-block'>\r\n            <span>To view this play-list you must be located&nbsp;</span>\r\n            <span\r\n              onClick={() => this.setShowHostLocation(false)}\r\n              className=\"link-like\"\r\n            >HERE</span>\r\n            <span>.&nbsp;But according to browsers location data you are&nbsp;</span>\r\n            <span\r\n              onClick={() => this.setShowHostLocation(true)}\r\n              className=\"link-like\"\r\n            >HERE</span>.\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"play-list-container\">\r\n          <PlayList\r\n            showRatingColumn\r\n            onPlaySideEffect={() => this.playlistLoadedToPlayer = true}\r\n            // userStatusOptions={options}\r\n            playlistId={Number(playlistId)}\r\n            playlistsStore={playlistsStore}\r\n            items={tracks.sort(sortByVotesCount)}\r\n            configureActionColumn={() => ({\r\n              title: 'Action',\r\n              key: 'action',\r\n              width: '15%`',\r\n              className: 'ant-actions-column',\r\n              render: ({ data, id }) => (\r\n                <div className=\"actions-container\">\r\n                  {canUserRemoveTrack && (\r\n                    <Popconfirm\r\n                      title={`Are you sure? Track rating will be lost.`}\r\n                      okText=\"Delete\"\r\n                      onConfirm={() => this.removeTrackById(id)}\r\n                    >\r\n                      <Icon\r\n                        type=\"minus-circle\"\r\n                        className=\"action-icon\"\r\n                      />\r\n                    </Popconfirm>\r\n                  )}\r\n                </div>\r\n              ),\r\n            })}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const { locationCheckState } = this.state;\r\n    const {\r\n      playlistsStore,\r\n      settingsStore,\r\n      tracksStore,\r\n      match: { params: { id: playListId } }\r\n    } = this.props;\r\n\r\n    const playListData = toJS(playlistsStore.getPlayListDataByIdSafe(playListId));\r\n    const tracks = playListData.tracks.filter(({ data }) => Boolean(data));\r\n    const trackIds = tracks.map((track) => track.data.id);\r\n\r\n    // TODO: could cause troubles here\r\n    const currentUserId = get(settingsStore, ['currentUser', 'id']);\r\n\r\n    const userSubscribed = playListData.participants.includes(currentUserId) || playListData.owners.includes(currentUserId);\r\n    const isUserOwner = playListData.owners.includes(currentUserId);\r\n    const isUserCreator = playListData.creator === currentUserId;\r\n\r\n    const locationIsValid = locationCheckState === LOCATION_CHECK_STATE.success;\r\n\r\n    const subscriptionButton = userSubscribed ? (\r\n      <Popconfirm\r\n        title={`Are you sure?${isUserCreator || isUserOwner ? ` You wan't be able to edit this playlist anymore.` : ''}`}\r\n        onConfirm={() => this.handleSubscriptionClick(true)}\r\n        okText=\"Yes\"\r\n      >\r\n        <Button>Unsubscribe</Button>\r\n      </Popconfirm>\r\n    ) : (\r\n      <Button\r\n        onClick={() => this.handleSubscriptionClick()}\r\n      >Subscribe</Button>\r\n    );\r\n\r\n    return (\r\n      <div className=\"content-outer-container dz-player-avoiding-view\">\r\n        <div className=\"playlist-header\">\r\n          <h2>{playListData.name}</h2>\r\n          {locationIsValid && (\r\n            <DzPlayTracksActionButton\r\n              className=\"dz-play-button-l\"\r\n              trackIds={trackIds}\r\n              onClickSideEffect={() => this.playlistLoadedToPlayer = true}\r\n            />\r\n          )}\r\n        </div>\r\n        {this.renderPlaylistView(tracks, playListData.place, {\r\n          subscribed: userSubscribed,\r\n          owner: isUserOwner,\r\n          creator: isUserCreator,\r\n        })}\r\n\r\n        <div className=\"play-list-action-buttons-container\">\r\n          {isUserCreator && (\r\n            <Popconfirm\r\n              title={`Are you sure. Deleted playlist can't be restored.`}\r\n              onConfirm={this.handleDeletePlayList}\r\n              okText=\"Delete\"\r\n            >\r\n              <Button>Delete</Button>\r\n            </Popconfirm>\r\n          )}\r\n          {(isUserCreator || isUserOwner) && (\r\n            <Button onClick={this.showEditModal}>Edit</Button>\r\n          )}\r\n          {subscriptionButton}\r\n        </div>\r\n\r\n        {userSubscribed && (\r\n          <DzSearch\r\n            renderItems={() => (\r\n              <PlayList\r\n                playlistId={null}\r\n                items={toJS(tracksStore.searchResultTracks)}\r\n                configureActionColumn={() => ({\r\n                  title: 'Action',\r\n                  key: 'action',\r\n                  width: '15%`',\r\n                  className: 'ant-actions-column',\r\n                  render: (record) => (\r\n                    <div className=\"actions-container\">\r\n                      <Icon type=\"plus-circle\" className=\"action-icon\" onClick={() => this.addTrackToList(record)}/>\r\n                    </div>\r\n                  ),\r\n                })}\r\n              />\r\n            )}\r\n            handleSearch={tracksStore.searchTracks}\r\n            searchIsLoading={tracksStore.searchAsyncState === ASYNC_STATE.pending}\r\n          />\r\n        )}\r\n\r\n        <PlayListModalForm\r\n          playListItem={playListData}\r\n          visible={this.state.playlistEditModalVisible}\r\n          hideModal={this.hideEditModal}\r\n          handleOk={this.handlePlaylistUpdate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('playlistsStore', 'settingsStore', 'tracksStore')(\r\n  observer(PlayListPage)\r\n);\r\n","// @flow\r\nimport React from 'react';\r\nimport {Input, Form} from \"antd\";\r\n\r\nimport {AUTH_FORM_FIELDS} from \"../../../constants\";\r\n\r\nconst FormItem = Form.Item;\r\nconst authFormFields = AUTH_FORM_FIELDS;\r\n\r\ntype Props = {\r\n  form: {},\r\n  fieldName?: string,\r\n  placeholder?: string,\r\n};\r\n\r\nexport const UserNameField = (props: Props) => {\r\n  const {\r\n    form: {\r\n      getFieldDecorator,\r\n    },\r\n    fieldName = authFormFields.userName,\r\n    placeholder = \"Put user name...\",\r\n  } = props;\r\n\r\n  return (\r\n    <FormItem label=\"User Name\">\r\n      {getFieldDecorator(fieldName, {\r\n        rules: [\r\n          // TODO: check other validation rules here\r\n          { required: true, message: 'Field is required.' }\r\n        ]\r\n      })(<Input placeholder={placeholder}/>)}\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport default UserNameField;\r\n","// @flow\r\nimport React from 'react';\r\nimport {Input, Form} from \"antd\";\r\n\r\nimport {AUTH_FORM_FIELDS} from \"../../../constants\";\r\n\r\nconst FormItem = Form.Item;\r\nconst authFormFields = AUTH_FORM_FIELDS;\r\n\r\ntype Props = {\r\n  form: {},\r\n  fieldName?: string,\r\n};\r\n\r\nexport const UserPasswordField = (props: Props) => {\r\n  const {\r\n    form: {\r\n      getFieldDecorator,\r\n    },\r\n    fieldName = authFormFields.password,\r\n  } = props;\r\n\r\n  return (\r\n    <FormItem label=\"Password\">\r\n      {getFieldDecorator(fieldName, {\r\n        rules: [\r\n          { required: true, message: 'Password is required.' },\r\n          { min: 8, message: 'Password must contain at least 8 characters.' },\r\n        ]\r\n      })(<Input.Password placeholder=\"Put password...\"/>)}\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport default UserPasswordField;\r\n","// @flow\r\nimport React from 'react';\r\nimport {Input, Form} from \"antd\";\r\n\r\nimport {AUTH_FORM_FIELDS} from \"../../../constants\";\r\n\r\nconst FormItem = Form.Item;\r\nconst authFormFields = AUTH_FORM_FIELDS;\r\n\r\ntype Props = {\r\n  form: {},\r\n  fieldName?: string,\r\n  validateToMatchFieldName?: string,\r\n};\r\n\r\nexport const UserRepeatPasswordField = (props: Props) => {\r\n  const {\r\n    form: {\r\n      getFieldDecorator,\r\n    },\r\n    fieldName = authFormFields.repeatPassword,\r\n  } = props;\r\n\r\n  const validateRepeatPassword = (rule, value, cb) => {\r\n    const {\r\n      form: { getFieldValue },\r\n      validateToMatchFieldName = authFormFields.password\r\n    } = props;\r\n\r\n    if (value !== getFieldValue(validateToMatchFieldName)) {\r\n      return cb(true);\r\n    }\r\n\r\n    return cb();\r\n  };\r\n\r\n  return (\r\n    <FormItem label=\"Repeat Password\">\r\n      {getFieldDecorator(fieldName, {\r\n        rules: [\r\n          { required: true, message: 'Password is required.' },\r\n          { validator: validateRepeatPassword, message: `Password didn't match.` }\r\n        ]\r\n      })(<Input.Password placeholder=\"Repeat password...\"/>)}\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport default UserRepeatPasswordField;\r\n","// @flow\r\nimport React from 'react';\r\nimport {Input, Form} from \"antd\";\r\n\r\nimport {AUTH_FORM_FIELDS} from \"../../../constants\";\r\n\r\nconst FormItem = Form.Item;\r\nconst authFormFields = AUTH_FORM_FIELDS;\r\n\r\ntype Props = {\r\n  form: {},\r\n  fieldName?: string,\r\n};\r\n\r\nexport const UserEmailField = (props: Props) => {\r\n  const {\r\n    form: {\r\n      getFieldDecorator,\r\n    },\r\n    fieldName = authFormFields.email,\r\n  } = props;\r\n\r\n  return (\r\n    <FormItem label=\"Email\">\r\n      {getFieldDecorator(fieldName, {\r\n        rules: [\r\n          { required: true, message: 'Email is required.' }\r\n        ]\r\n      })(<Input placeholder=\"Put email...\"/>)}\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport default UserEmailField;\r\n","// flow\r\nimport React, { Component } from 'react';\r\nimport { Form, Button, message, Spin } from 'antd';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport UserNameField from \"../common/components/FormFields/UserAccountFields/UserNameField\";\r\nimport UserPasswordField from \"../common/components/FormFields/UserAccountFields/UserPasswordField\";\r\nimport UserRepeatPasswordField from \"../common/components/FormFields/UserAccountFields/UserRepeatPasswordField\";\r\nimport UserEmailField from \"../common/components/FormFields/UserAccountFields/UserEmailField\";\r\nimport {handleNonFieldErrors, transferResponseErrorsToForm} from \"../common/helpers\";\r\n\r\nimport {ASYNC_STATE, AUTH_FORM_ACTION_TYPES, AUTH_FORM_FIELDS} from \"../common/constants\";\r\n\r\nimport type { SettingsStore } from \"../stores/settingsStore\";\r\n\r\nimport \"./AuthorizationPage.styles.scss\";\r\n\r\nexport const authFormFields = AUTH_FORM_FIELDS;\r\nconst actionTypeData = {\r\n  [AUTH_FORM_ACTION_TYPES.register]: {\r\n    headerText: 'Registration',\r\n    formSubmitText: 'Register',\r\n    formActionSwitchText: `Have an Account? Login.`,\r\n  },\r\n  [AUTH_FORM_ACTION_TYPES.login]: {\r\n    headerText: 'Login',\r\n    formSubmitText: 'Login',\r\n    formActionSwitchText: `Don't have an Account yet? Register.`\r\n  }\r\n};\r\n\r\ntype Props = {\r\n  settingsStore: SettingsStore,\r\n};\r\ntype State = {\r\n  showRegisterSuccessMessage: boolean,\r\n};\r\n\r\nexport class AuthorizationPage extends Component<Props, State> {\r\n  state = {\r\n    showRegisterSuccessMessage: false,\r\n  };\r\n  formId = 'authorization-form';\r\n\r\n  registeredUserEmail = '';\r\n\r\n  handleUserRegister = () => {\r\n    const { form, settingsStore } = this.props;\r\n\r\n    form.validateFields(async (errors, values) => {\r\n      if (!errors) {\r\n        try {\r\n          await settingsStore.userRegister(values);\r\n\r\n          this.registeredUserEmail = values[authFormFields.email];\r\n          this.setState({ showRegisterSuccessMessage: true });\r\n        } catch(error) {\r\n          transferResponseErrorsToForm(form, error);\r\n          message.error('Validation error occurred');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleUserLogin = () => {\r\n    const { form, settingsStore, history } = this.props;\r\n\r\n    form.validateFields(async (errors, values) => {\r\n      if (!errors) {\r\n        try {\r\n          await settingsStore.userLogin(values);\r\n\r\n          history.push('/');\r\n        } catch(error) {\r\n          transferResponseErrorsToForm(form, error);\r\n          handleNonFieldErrors(error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleFormActionSwitch = () => {\r\n    const { getFieldValue, setFieldsValue } = this.props.form;\r\n\r\n    const { login, register } = AUTH_FORM_ACTION_TYPES;\r\n    const currentFormAction = getFieldValue(AUTH_FORM_FIELDS.formActionType);\r\n    const nextActionType = currentFormAction === login ?\r\n      register : login;\r\n\r\n    setFieldsValue({ [AUTH_FORM_FIELDS.formActionType]: nextActionType });\r\n  };\r\n\r\n  render() {\r\n    const { showRegisterSuccessMessage } = this.state;\r\n    const { form, settingsStore } = this.props;\r\n    const { getFieldDecorator, getFieldValue } = form;\r\n\r\n    getFieldDecorator(authFormFields.formActionType);\r\n    const formAction = getFieldValue(authFormFields.formActionType);\r\n    const {\r\n      headerText,\r\n      formSubmitText,\r\n      formActionSwitchText,\r\n    } = actionTypeData[formAction] || {};\r\n    const isRegister = formAction === AUTH_FORM_ACTION_TYPES.register;\r\n    const handleConfirm = isRegister ? this.handleUserRegister : this.handleUserLogin;\r\n\r\n    if (showRegisterSuccessMessage) {\r\n      return (\r\n        <div className=\"content-outer-container\">\r\n          <div id=\"register-success-info\">\r\n            <h2>Registered Successfully</h2>\r\n            <p>Confirmation link is sent to <strong>{this.registeredUserEmail}</strong></p>\r\n            <div>\r\n              <span\r\n                className=\"link-like\"\r\n                onClick={() => {\r\n                  form.setFieldsValue({ [authFormFields.formActionType]: AUTH_FORM_ACTION_TYPES.login });\r\n                  this.setState({ showRegisterSuccessMessage: false });\r\n                }}\r\n              >Go to Login</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Spin spinning={settingsStore.asyncState === ASYNC_STATE.pending}>\r\n        <div className=\"content-outer-container\">\r\n          <h1>{headerText}</h1>\r\n          <Form id={this.formId}>\r\n            {isRegister && <UserNameField form={form}/>}\r\n\r\n            <UserEmailField form={form}/>\r\n\r\n            <UserPasswordField form={form}/>\r\n\r\n            {isRegister && <UserRepeatPasswordField form={form}/>}\r\n\r\n            <div className=\"text-align-center\" >\r\n              <span className=\"link-like\" onClick={this.handleFormActionSwitch}>\r\n                {formActionSwitchText}\r\n              </span>\r\n            </div>\r\n\r\n            <Button type=\"primary\" onClick={handleConfirm}>\r\n              {formSubmitText}\r\n            </Button>\r\n\r\n          </Form>\r\n        </div>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapPropsToFields = (props) => {\r\n  return {\r\n    [authFormFields.userName]: Form.createFormField({ value: 'dmytro-test-login' }),\r\n    [authFormFields.password]: Form.createFormField({ value: 'abc45678' }),\r\n    [authFormFields.repeatPassword]: Form.createFormField({ value: 'abc45678' }),\r\n    [authFormFields.email]: Form.createFormField({ value: 'test@gmail.com' }),\r\n    [authFormFields.formActionType]: Form.createFormField({ value: AUTH_FORM_ACTION_TYPES.login }),\r\n  };\r\n};\r\n\r\nconst AuthorizationPageForm = Form.create({\r\n  mapPropsToFields\r\n})(observer(AuthorizationPage));\r\n\r\nexport default inject('settingsStore')(\r\n  observer(AuthorizationPageForm)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {Button, Form, message, Spin} from \"antd\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport { toJS } from 'mobx';\r\n\r\nimport {handleNonFieldErrors, transferResponseErrorsToForm} from \"../../common/helpers\";\r\nimport UserNameField from \"../../common/components/FormFields/UserAccountFields/UserNameField\";\r\nimport UserPasswordField from \"../../common/components/FormFields/UserAccountFields/UserPasswordField\";\r\nimport UserRepeatPasswordField from \"../../common/components/FormFields/UserAccountFields/UserRepeatPasswordField\";\r\n\r\nimport {ASYNC_STATE, PROFILE_FORM_FIELDS} from \"../../common/constants\";\r\n\r\nimport type {SettingsStore} from \"../../stores/settingsStore\";\r\n\r\nconst profileFormFields = PROFILE_FORM_FIELDS;\r\nconst passwordChangeFields = [\r\n  profileFormFields.newPassword,\r\n  profileFormFields.repeatNewPassword,\r\n];\r\nconst userInfoFields = [\r\n  profileFormFields.firstName,\r\n  profileFormFields.secondName,\r\n];\r\n\r\ntype Props = {\r\n  settingsStore: SettingsStore,\r\n};\r\n\r\nexport class ProfilePage extends Component<Props, State> {\r\n  formId = 'profile-form';\r\n\r\n  handleFormConfirm = (isPasswordChange: boolean = false) => {\r\n    const { form, settingsStore } = this.props;\r\n\r\n    const [ fieldsToValidate, fieldsToReset ] = isPasswordChange ? [\r\n      passwordChangeFields,\r\n      userInfoFields,\r\n    ] : [\r\n      userInfoFields,\r\n      passwordChangeFields,\r\n    ];\r\n\r\n    const fieldsToSet = fieldsToReset.reduce((acc, fieldName) => ({\r\n      ...acc,\r\n      [fieldName]: { value: form.getFieldValue(fieldName), errors: null },\r\n    }), {});\r\n\r\n    form.validateFields(fieldsToValidate, async (errors, values) => {\r\n      if (!errors) {\r\n        try {\r\n\r\n          if (isPasswordChange) {\r\n            await settingsStore.changePassword(values);\r\n          } else {\r\n            await settingsStore.updateProfile(values);\r\n          }\r\n\r\n          message.success(`${isPasswordChange ? 'Password' : 'Profile data'} updated successfully.`);\r\n        } catch(error) {\r\n          transferResponseErrorsToForm(form, error);\r\n          handleNonFieldErrors(error)\r\n        } finally {\r\n          form.setFields(fieldsToSet);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { form, settingsStore } = this.props;\r\n\r\n    return (\r\n      <Spin spinning={settingsStore.asyncState === ASYNC_STATE.pending}>\r\n        <div className=\"content-outer-container dz-player-avoiding-view\">\r\n          <h1>My Profile</h1>\r\n          <Form id={this.formId}>\r\n            <UserNameField\r\n              form={form}\r\n              fieldName={profileFormFields.firstName}\r\n              placeholder={'First name...'}\r\n            />\r\n\r\n            <UserNameField\r\n              form={form}\r\n              fieldName={profileFormFields.secondName}\r\n              placeholder={'Second name...'}\r\n            />\r\n\r\n            <Button type=\"primary\" onClick={() => this.handleFormConfirm()}>\r\n              Update Profile\r\n            </Button>\r\n\r\n            <UserPasswordField form={form} fieldName={profileFormFields.newPassword}/>\r\n\r\n            <UserRepeatPasswordField\r\n              form={form}\r\n              fieldName={profileFormFields.repeatNewPassword}\r\n              validateToMatchFieldName={profileFormFields.newPassword}\r\n            />\r\n\r\n            <Button type=\"primary\" onClick={() => this.handleFormConfirm(true)}>\r\n              Change Password\r\n            </Button>\r\n\r\n            <Button\r\n              id=\"deezer-account-button\"\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                window.DZ.login((response) => {\r\n                  if (response.authResponse) {\r\n                    window.DZ.api('/user/me', (response) => {\r\n                      console.log('Good to see you, ' + response.name + '.');\r\n                    });\r\n                  } else {\r\n                    console.warn('User cancelled login or did not fully authorize.');\r\n                  }\r\n                }, { perms: 'basic_access,email' });\r\n              }}\r\n            >Connect Deezer Account</Button>\r\n          </Form>\r\n        </div>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapPropsToFields = (props) => {\r\n  const { settingsStore } = props;\r\n  const currentUser = toJS(settingsStore.currentUser);\r\n\r\n  console.log('Map Props To Fields');\r\n\r\n  const {\r\n    firstName,\r\n    secondName,\r\n  } = profileFormFields;\r\n\r\n  return {\r\n    [firstName]: Form.createFormField({ value: currentUser[firstName] }),\r\n    [secondName]: Form.createFormField({ value: currentUser[secondName] }),\r\n\r\n    [profileFormFields.newPassword]: Form.createFormField({ value: '' }),\r\n    [profileFormFields.repeatNewPassword]: Form.createFormField({ value: '' }),\r\n  };\r\n};\r\n\r\nconst ProfilePageForm = Form.create({\r\n  mapPropsToFields\r\n})(observer(ProfilePage));\r\n\r\nexport default inject('settingsStore')(\r\n  observer(ProfilePageForm)\r\n);\r\n","// @flow\r\nimport React, { PureComponent } from 'react';\r\nimport { Icon, Table, Input, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nconst getRestictionsRow = (_, record) => {\r\n  const restrictionTexts = [];\r\n\r\n  if (!record.is_public) {\r\n    restrictionTexts.push('Private');\r\n  }\r\n  if (record.place) {\r\n    restrictionTexts.push('Location Restricted');\r\n  }\r\n  if (record.time_from || record.time_to) {\r\n    restrictionTexts.push('Time Restricted');\r\n  }\r\n\r\n  // TODO: add tooltip to show restriction data\r\n  return restrictionTexts.length ? (\r\n    <div className=\"indicators-wrapper\">\r\n      <Icon\r\n        type=\"check-circle\"\r\n        className=\"indicator-icon\"\r\n        title={restrictionTexts.join(' - ')}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Id',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    width: '10%',\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    width: '25%',\r\n    render: (text, record) => (\r\n      <span>\r\n        <Link to={`/playlists/${record.id}`}>\r\n          {text}\r\n        </Link>\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Public',\r\n    dataIndex: 'is_public',\r\n    key: 'is_public',\r\n    width: '15%`',\r\n    render: (_, record) => (\r\n      <span>{record.is_public.toString()}</span>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Restricted',\r\n    dataIndex: 'hasRestrictions',\r\n    key: 'hasRestrictions',\r\n    width: '10%`',\r\n    render: getRestictionsRow,\r\n  }\r\n];\r\n\r\nconst paginationConfig = {\r\n  hideOnSinglePage: true,\r\n  showSizeChanger: true,\r\n};\r\n\r\ntype Props = {\r\n  playlists: [],\r\n};\r\ntype State = {\r\n  searchText: string,\r\n};\r\n\r\nexport class PlayLists extends PureComponent<Props, State> {\r\n  state = {\r\n    searchText: '',\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => { this.searchInput = node; }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          onClick={() => this.handleReset(clearFilters)}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: (text, record) => (\r\n      <Link to={`/playlists/${record.id}`}>\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      </Link>\r\n    ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm();\r\n    this.setState({ searchText: selectedKeys[0] });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      playlists,\r\n    } = this.props;\r\n\r\n    Object.assign(columns[1], {...this.getColumnSearchProps('name')});\r\n\r\n    return (\r\n      <Table\r\n        rowKey={record => `album-item-${record.id}`}\r\n        columns={columns}\r\n        dataSource={playlists}\r\n        rowClassName=\"album-record\"\r\n        pagination={paginationConfig}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayLists;\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Button, Spin, message } from 'antd';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\n\r\nimport PlayLists from \"../../common/components/PlayLists/PlayLists\";\r\nimport PlayListModalForm from \"./PlayListModalForm\";\r\nimport {safeGetCurrentUserId} from \"../../common/helpers\";\r\n\r\nimport {ASYNC_STATE, WEB_SOCKET_MESSAGE_TYPES, webSocketBase} from \"../../common/constants\";\r\n\r\nimport type {PlaylistsStore} from \"../../stores/playlistsStore\";\r\nimport type {TracksStore} from \"../../stores/tracksStore\";\r\n\r\nimport \"./PlayListsPage.styles.scss\";\r\nimport get from \"lodash.get\";\r\n\r\ntype Props = {\r\n  myPlaylists?: boolean,\r\n  playlistsStore: PlaylistsStore,\r\n  tracksStore: TracksStore\r\n};\r\ntype State = {\r\n  newPlayListModalVisible: boolean,\r\n};\r\n\r\nexport class PlayListsPage extends Component<Props, State> {\r\n  state = {\r\n    newPlayListModalVisible: false,\r\n  };\r\n\r\n  serverSocket = null;\r\n\r\n  componentDidMount = async () => {\r\n    const { playlistsStore } = this.props;\r\n\r\n    const currentUserId = safeGetCurrentUserId();\r\n    this.serverSocket = new WebSocket(`${webSocketBase}/user/${currentUserId}/`);\r\n\r\n    // this.serverSocket.addEventListener('open', () => {\r\n    //   console.log('Playlists Socket Opened');\r\n    // });\r\n    this.serverSocket.addEventListener('message', this.handleSocketMessage);\r\n    // this.serverSocket.addEventListener('close', () => {\r\n    //   console.log('Playlists Socket Closed');\r\n    // });\r\n\r\n    try {\r\n      await playlistsStore.getPlayLists();\r\n      await playlistsStore.getMyPlaylists();\r\n    } catch(e) {\r\n      message.error('Error loading playlists. Please try again later.');\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    if (this.serverSocket) {\r\n      this.serverSocket.close();\r\n    }\r\n  };\r\n\r\n  handleSocketMessage = async (event) => {\r\n    const { playlistsStore } = this.props;\r\n\r\n    try {\r\n      const data = JSON.parse(get(event, ['data']) || '{}');\r\n\r\n      if (data.message === WEB_SOCKET_MESSAGE_TYPES.refresh) {\r\n        console.log('Refresh Playlists');\r\n        await playlistsStore.getMyPlaylists();\r\n      } else if (data.message === WEB_SOCKET_MESSAGE_TYPES.delete) {\r\n        console.warn(\"I don't know what to do on 'delete' message\");\r\n      }\r\n    } catch(e) {\r\n      console.warn('Web Socket message processing error.');\r\n    }\r\n  };\r\n\r\n  hidePlayListModalForm = () => this.setState({ newPlayListModalVisible: false });\r\n\r\n  handleCreatePlayList = async (values) => {\r\n    const { playlistsStore, tracksStore } = this.props;\r\n    const tracks = [...values.tracks];\r\n\r\n    delete(values.tracks);\r\n\r\n\r\n    try {\r\n      const playList  = await playlistsStore.createPlayList(values);\r\n\r\n      if (playList) {\r\n        // TODO: errors is not handled\r\n        tracksStore.bulkAddTracksToPlaylist(playList.id, tracks);\r\n      }\r\n    } catch(e) {\r\n      message.error('Error creating play list. Try again later.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { playlistsStore, myPlaylists, history } = this.props;\r\n    const { newPlayListModalVisible } = this.state;\r\n\r\n    const playLists = myPlaylists ?\r\n      toJS(playlistsStore.myPlaylists) :\r\n      toJS(playlistsStore.playlists);\r\n\r\n    return (\r\n      <div className=\"content-outer-container\">\r\n        <Spin spinning={playlistsStore.asyncState === ASYNC_STATE.pending}>\r\n          <div className=\"playlists-header\">\r\n            <h2 className=\"page-header\">{myPlaylists ? 'My Playlists' : 'Playlists'}</h2>\r\n            <span\r\n              className=\"link-like\"\r\n              onClick={() => history.push(myPlaylists ? '/playlists' : '/playlists/my')}\r\n            >{`${myPlaylists ? 'All playlists' : 'My playlists'}`}</span>\r\n          </div>\r\n\r\n          <PlayLists\r\n            playlists={playLists}\r\n          />\r\n\r\n          <Button\r\n            id=\"add-new-playlist\"\r\n            type=\"primary\"\r\n            onClick={() => this.setState({ newPlayListModalVisible: true })}\r\n          >\r\n            Add New Playlist\r\n          </Button>\r\n\r\n          <PlayListModalForm\r\n            isCreateForm={true}\r\n            visible={newPlayListModalVisible}\r\n            hideModal={this.hidePlayListModalForm}\r\n            handleOk={this.handleCreatePlayList}\r\n          />\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('playlistsStore', 'tracksStore')(observer(PlayListsPage));\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Spin, Form, Input, Select } from 'antd';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport {ASYNC_STATE} from \"../../common/constants\";\r\n\r\nimport type {PlaylistsStore} from \"../../stores/playlistsStore\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\ntype Props = {\r\n  playlistsStore: PlaylistsStore,\r\n};\r\ntype State = {};\r\nexport class PlayListEditPage extends Component<Props, State> {\r\n  // componentDidMount = () => {\r\n  //   console.log(this.props);\r\n  // };\r\n\r\n  render() {\r\n    const { playlistsStore } = this.props;\r\n\r\n    return (\r\n      <div className=\"content-outer-container\">\r\n        <Spin spinning={playlistsStore.asyncState === ASYNC_STATE.pending}>\r\n          <Form>\r\n            <FormItem label=\"Play List Title\">\r\n              <Input/>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"Keywords\">\r\n              <Select></Select>\r\n            </FormItem>\r\n          </Form>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('playlistsStore')(observer(PlayListEditPage));\r\n","import React  from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport PlayListPage from \"../../pages/PlayListPage/PlayListPage\";\r\n\r\nimport AuthorizationPage from '../../pages/AuthorizationPage';\r\nimport ProfilePage from \"../../pages/ProfilePage/ProfilePage\";\r\nimport PlayListsPage from \"../../pages/PlayListsPage/PlayListsPage\";\r\nimport PlayListEditPage from \"../../pages/PlayListEditPage/PlayListEditPage\";\r\nimport {localStorageCredentialsPresent} from \"../helpers\";\r\n\r\nconst renderProfilePage = (props) => {\r\n  return (\r\n    localStorageCredentialsPresent() ?\r\n      <ProfilePage {...props} /> :\r\n      <Redirect to={'/auth'}/>\r\n  );\r\n};\r\n\r\nconst renderPlayListsPage = (props) => {\r\n  return (\r\n    localStorageCredentialsPresent() ?\r\n      <PlayListsPage {...props}/> :\r\n      <Redirect to={'/auth'}/>\r\n  );\r\n};\r\n\r\nconst renderMyPlayListsPage = (props) => {\r\n  return (\r\n    localStorageCredentialsPresent() ?\r\n      <PlayListsPage myPlaylists {...props}/> :\r\n      <Redirect to={'/auth'}/>\r\n  );\r\n};\r\n\r\nconst renderAuthPage = (props) => {\r\n  return (<AuthorizationPage {...props} />);\r\n};\r\n\r\nconst renderPlayListPage = (props) => {\r\n  return (\r\n    localStorageCredentialsPresent() ?\r\n      <PlayListPage {...props} /> :\r\n      <Redirect to={'/auth'}/>\r\n  );\r\n};\r\n\r\nconst renderPlayListEditPage = (props) => {\r\n  return (\r\n    localStorageCredentialsPresent() ?\r\n      <PlayListEditPage {...props} /> :\r\n      <Redirect to={'/auth'}/>\r\n  );\r\n};\r\n\r\nconst Routes = ({ history }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' render={() => <Redirect to='/playlists'/>} />\r\n\r\n      <Route exact path='/main' render={() => <Redirect to='/playlists'/>} />\r\n\r\n      <Route exact path='/profile' render={renderProfilePage} />\r\n\r\n      <Route exact path='/playlists' render={renderPlayListsPage} />\r\n\r\n      <Route exact path='/playlists/my' render={renderMyPlayListsPage} />\r\n\r\n      <Route exact path='/auth' render={renderAuthPage} />\r\n\r\n      <Route exact path='/playlists/:id' render={renderPlayListPage} />\r\n\r\n      <Route exact path='/playlists/:id/edit' render={renderPlayListEditPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default withRouter(Routes);\r\n","\r\nimport { action, observable, runInAction } from 'mobx';\r\n\r\nexport class SandboxStore {\r\n  @observable items = [];\r\n\r\n  @action('set items using value')\r\n  setItems = async (newItems) => {\r\n    runInAction('setting items', () => {\r\n      this.items = newItems;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SandboxStore();\r\n","// @flow\r\nimport Axios from 'axios';\r\n\r\nimport {AUTH_LOCAL_STORAGE_FIELDS} from \"../common/constants\";\r\nimport type {TTracksRecord} from \"../common/types\";\r\n\r\nexport const axios = new Axios.create({\r\n    baseURL: 'https://musicroom.ml/',\r\n    timeout: 3000,\r\n    headers: {},\r\n});\r\n\r\nconst dumbEndPoints = ['auth/registration/', 'auth/login/'];\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(AUTH_LOCAL_STORAGE_FIELDS.token);\r\n    const { url } = config;\r\n\r\n    if (!dumbEndPoints.includes(url)) {\r\n      if (token) {\r\n        Object.assign(config.headers.common, {\r\n          Authorization: `JWT ${token}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error),\r\n);\r\n\r\n// axios.interceptors.response.use(\r\n//   (response) => {\r\n//     console.log(response);\r\n//     return response;\r\n//   },\r\n//   (error) => Promise.reject(error),\r\n// );\r\n\r\n/* Auth */\r\nconst registration = (payload) => axios.post('auth/registration/', payload);\r\n\r\nconst login = (payload) => axios.post('auth/login/', payload);\r\n\r\nconst changePassword = (payload) => axios.post('auth/password/change/', payload);\r\n\r\n/* Playlists */\r\nconst getPlayLists = () => axios.get('api/playlists/');\r\n\r\nconst getUserPlayLists = (userId: number) => axios.get(`api/users/${userId}/playlists/`);\r\n\r\nconst getPlayList = (id: number) => axios.get(`api/playlists/${id}/`);\r\n\r\nconst createPlayList = (payload) => axios.post('api/playlists/', payload);\r\n\r\nconst updatePlayList = (id: number, payload) => axios.patch(`api/playlists/${id}/`, payload);\r\n\r\nconst removePlaylist = (id: number) => axios.delete(`api/playlists/${id}/`);\r\n\r\n// TODO: this should not be patch but post\r\nconst addPlaylistOwner = (playlistId: number, userId: number) =>\r\n  axios.patch(`/api/playlists/${playlistId}/owners/${userId}/`);\r\n\r\nconst removePlaylistOwner = (playlistId: number, userId: number) =>\r\n  axios.delete(`/api/playlists/${playlistId}/owners/${userId}/`);\r\n\r\nconst addPlaylistParticipant = (playlistId: number, userId: number) =>\r\n  axios.patch(`/api/playlists/${playlistId}/participants/${userId}/`);\r\n\r\nconst removePlaylistParticipant = (playlistId: number, userId: number) =>\r\n  axios.delete(`/api/playlists/${playlistId}/participants/${userId}/`);\r\n\r\nconst playlistUnsubscribe = (playlistId: number, userId: number) =>\r\n  axios.delete(`/api/playlists/${playlistId}/users/${userId}/`);\r\n\r\n/* Tracks */\r\nconst getVote = (id) => axios.get(`api/votes/${id}/`);\r\n\r\nconst voteTrack = (id: number) => axios.post(`api/votes/${id}/`);\r\n\r\nconst addTrack = (playlistId: number, data: TTracksRecord) => axios.post(`api/tracks/`, {\r\n  playlist: playlistId,\r\n  data,\r\n});\r\n\r\nconst removeTrack = (trackId: number) => axios.delete(`api/tracks/${trackId}/`);\r\n\r\n/* User */\r\nconst getUsers = () => axios.get('api/users/');\r\n\r\nconst getUserById = (id: number) => axios.get(`api/users/${id}/`);\r\n\r\nconst searchUsers = (name: string) => axios.get('api/users/user_search/', {\r\n  params: {\r\n    name,\r\n  }\r\n});\r\n\r\nconst updateProfile = (id: number, body: {}) => axios.patch(`api/users/${id}/`, body);\r\n\r\nexport default {\r\n  registration,\r\n  login,\r\n  changePassword,\r\n\r\n  getPlayLists,\r\n  getUserPlayLists,\r\n  getPlayList,\r\n  createPlayList,\r\n  updatePlayList,\r\n  removePlaylist,\r\n  addPlaylistOwner,\r\n  removePlaylistOwner,\r\n  addPlaylistParticipant,\r\n  removePlaylistParticipant,\r\n  playlistUnsubscribe,\r\n\r\n  getVote,\r\n  voteTrack,\r\n  addTrack,\r\n  removeTrack,\r\n\r\n  getUsers,\r\n  getUserById,\r\n  searchUsers,\r\n  updateProfile,\r\n};\r\n","// @flow\r\nimport {action, observable, flow, IObservableValue} from 'mobx';\r\n\r\nimport type { IObservableObject, IObservableArray } from 'mobx';\r\nimport apiService from \"../services/apiService\";\r\nimport {ASYNC_STATE, AUTH_FORM_FIELDS, AUTH_LOCAL_STORAGE_FIELDS} from \"../common/constants\";\r\nimport {safeGetCurrentUserId} from \"../common/helpers\";\r\n\r\nconst registerFormFields = AUTH_FORM_FIELDS;\r\n\r\nexport class SettingsStore {\r\n  @observable asyncState: IObservableValue = ASYNC_STATE.done;\r\n  @observable currentUser: IObservableObject = {\r\n    id: Number(localStorage.getItem(AUTH_LOCAL_STORAGE_FIELDS.userId)),\r\n  };\r\n\r\n  @observable allUsers: IObservableArray = [];\r\n\r\n\r\n  parseRegisterBody = (values) => ({\r\n    username: values[registerFormFields.userName],\r\n    password1: values[registerFormFields.password],\r\n    password2: values[registerFormFields.repeatPassword],\r\n    email: values[registerFormFields.email],\r\n  });\r\n\r\n  @action('user register')\r\n  userRegister = flow((function * (formValues) {\r\n    try {\r\n      this.asyncState = ASYNC_STATE.pending;\r\n\r\n      const payload = this.parseRegisterBody(formValues);\r\n\r\n      yield apiService.registration(payload);\r\n\r\n    } catch(error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  parseLoginBody = (values: {}) => ({\r\n    email: values[registerFormFields.email],\r\n    password: values[registerFormFields.password],\r\n  });\r\n\r\n  @action('user login')\r\n  userLogin = flow((function * (formValues: {}) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const payload = this.parseLoginBody(formValues);\r\n\r\n      const { data } = yield apiService.login(payload);\r\n      const { user } = data;\r\n\r\n      Object.assign(user, { id: user.pk });\r\n\r\n      delete(user.pk);\r\n\r\n      this.currentUser = user;\r\n\r\n      if (data.token) {\r\n        localStorage.setItem(AUTH_LOCAL_STORAGE_FIELDS.userId, user.id);\r\n        localStorage.setItem(AUTH_LOCAL_STORAGE_FIELDS.token, data.token);\r\n      }\r\n    } catch(error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('user logout')\r\n  userLogout = () => {\r\n    this.currentUser = {};\r\n\r\n    localStorage.removeItem(AUTH_LOCAL_STORAGE_FIELDS.userId);\r\n    localStorage.removeItem(AUTH_LOCAL_STORAGE_FIELDS.token);\r\n  };\r\n\r\n  @action('get my user')\r\n  getMyUser = flow((function * () {\r\n    try {\r\n      this.asyncState = ASYNC_STATE.pending;\r\n\r\n      const currentUserId = safeGetCurrentUserId();\r\n\r\n      if (currentUserId) {\r\n        const { data } = yield apiService.getUserById(currentUserId);\r\n\r\n        this.currentUser = data;\r\n      }\r\n    } catch(error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('update profile')\r\n  updateProfile = flow((function * (body: {}) {\r\n    try {\r\n      this.asyncState = ASYNC_STATE.pending;\r\n\r\n      const currentUserId = safeGetCurrentUserId();\r\n      const { data } = yield apiService.updateProfile(currentUserId, body);\r\n\r\n      this.currentUser = data;\r\n    } catch(error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('change password')\r\n  changePassword = flow((function * (body: {}) {\r\n    try {\r\n      this.asyncState = ASYNC_STATE.pending;\r\n\r\n      yield apiService.changePassword(body);\r\n    } catch(error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('get users')\r\n  getUsers = flow((function * () {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const { data } = yield apiService.getUsers();\r\n\r\n      this.allUsers = data;\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  // @action('users search')\r\n  // searchUsers = flow((function * (name: string) {\r\n  //   this.asyncState = ASYNC_STATE.pending;\r\n  //\r\n  //   try {\r\n  //     const { data } = yield apiService.searchUsers(name);\r\n  //\r\n  //     console.log(data);\r\n  //   } catch (error) {\r\n  //     throw error;\r\n  //   } finally {\r\n  //     this.asyncState = ASYNC_STATE.done;\r\n  //   }\r\n  // }).bind(this));\r\n}\r\n\r\nexport default new SettingsStore();\r\n","// @flow\r\nimport type {TDzSearchOptions} from \"../common/types\";\r\n\r\n// const withCheckDeezerSDK = fn => (...args) => {\r\n//   const { DZ } = window;\r\n//\r\n//   if (!DZ) {\r\n//     throw new Error('Deezer SDK is not present on window instance.');\r\n//   }\r\n//\r\n//   return fn(...args);\r\n// };\r\n\r\nconst withCallbackToPromise = (...args) => {\r\n  return (\r\n    new Promise((resolve, reject) => {\r\n      window.DZ.api(...args, (response) => {\r\n        if (response.error) {\r\n          reject(response.error);\r\n        }\r\n        resolve(response);\r\n      });\r\n    })\r\n  )\r\n};\r\n\r\nconst getMyUser = () => withCallbackToPromise('/user/me');\r\n\r\nconst getUserById = (id: number) => withCallbackToPromise(`user/${id}`);\r\n\r\nconst searchTracks = (qOptions: TDzSearchOptions) => {\r\n  const parsedQuery = Object.entries(qOptions).reduce(\r\n    (params, [key, value]) => (params + `${key}:\"${value}\" `),\r\n    '',\r\n  );\r\n\r\n  return withCallbackToPromise('search?q=' + parsedQuery);\r\n};\r\n\r\nexport default {\r\n  getMyUser,\r\n  getUserById,\r\n  searchTracks,\r\n};","// @flow\r\nimport {\r\n  observable,\r\n  action,\r\n  flow,\r\n} from 'mobx';\r\n\r\nimport {ASYNC_STATE} from \"../common/constants\";\r\n\r\nimport deezerApiService from \"../services/deezerApiService\";\r\nimport apiService from \"../services/apiService\";\r\n\r\nimport type {IObservableArray, IObservableObject} from 'mobx';\r\nimport type {TDzSearchOptions, TTracksRecord} from \"../common/types\";\r\n\r\nexport class TracksStore {\r\n  @observable asyncState = ASYNC_STATE.done;\r\n  @observable searchAsyncState = ASYNC_STATE.done;\r\n\r\n  @observable searchResultTracks: IObservableArray = [];\r\n  @observable playlistsTracks: IObservableObject = {};\r\n\r\n  @action('search for tracks')\r\n  searchTracks = flow((function * (queryOptions: TDzSearchOptions) {\r\n    this.searchAsyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const response = yield deezerApiService.searchTracks(queryOptions);\r\n\r\n      this.searchResultTracks = response.data.map((data) => ({ id: data.id, data }));\r\n    } catch(e) {\r\n      throw e;\r\n    } finally {\r\n      this.searchAsyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this)); // with bind you can pass method as prop separated from store\r\n\r\n  @action('add tracks to playlist by id')\r\n  addTrackToPlaylist = flow(function * (playlistId: number, data: TTracksRecord) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const newTrack = yield apiService.addTrack(playlistId, data);\r\n      // console.log(newTrack);\r\n\r\n      if (newTrack) {\r\n        this.playlistsTracks[playlistId].push(newTrack);\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this);\r\n\r\n  @action('bulk add tracks to playlist')\r\n  bulkAddTracksToPlaylist = flow(function * (playlistId: number, data: TTracksRecord[]) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    for (let track of data) {\r\n      try {\r\n        yield apiService.addTrack(playlistId, track);\r\n      } catch(e) {}\r\n    }\r\n\r\n    this.asyncState = ASYNC_STATE.done;\r\n  }).bind(this);\r\n}\r\n\r\nexport default new TracksStore();\r\n","// @flow\r\nimport {\r\n  observable,\r\n  action,\r\n  flow, extendObservable, set,\r\n} from 'mobx';\r\n\r\nimport {ASYNC_STATE} from \"../common/constants\";\r\nimport apiService from \"../services/apiService\";\r\n\r\nimport type {IObservableArray, IObservableObject} from 'mobx';\r\nimport type {TTracksRecord} from \"../common/types\";\r\nimport {safeGetCurrentUserId} from \"../common/helpers\";\r\n\r\nconst defaultPlayListFullData = {\r\n  tracks: [],\r\n  participants: [],\r\n  owners: [],\r\n};\r\n\r\ntype UserManagementAction = 'add' | 'remove';\r\n\r\nexport class PlaylistsStore {\r\n  @observable asyncState = ASYNC_STATE.done;\r\n  @observable searchAsyncState = ASYNC_STATE.done;\r\n\r\n  @observable playlists: IObservableArray = [];\r\n  @observable myPlaylists: IObservableArray = [];\r\n  @observable fullPlayListData: IObservableObject = {};\r\n\r\n  @action('get play lists')\r\n  getPlayLists = flow((function * () {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const { data } = yield apiService.getPlayLists();\r\n\r\n      this.playlists = data;\r\n    } catch(e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('get play lists')\r\n  getMyPlaylists = flow((function * () {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const currentUserId = safeGetCurrentUserId();\r\n      const { data } = yield apiService.getUserPlayLists(currentUserId);\r\n\r\n      this.myPlaylists = data;\r\n    } catch(e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('create playlist')\r\n  createPlayList = flow((function * (playListData) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const { data: newPlayList } = yield apiService.createPlayList(playListData);\r\n\r\n      this.playlists = [\r\n        ...this.playlists,\r\n        newPlayList,\r\n      ];\r\n      this.myPlaylists = [\r\n        ...this.myPlaylists,\r\n        newPlayList,\r\n      ];\r\n\r\n      return newPlayList;\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('update playlist')\r\n  updatePlayList = flow((function * (playlistId: number, playListData: {}) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const { data: updateData } = yield apiService.updatePlayList(playlistId, playListData);\r\n\r\n      const playlist = this.getPlayListById(playlistId);\r\n      const myPlaylist = this.getMyPlayListById(playlistId);\r\n\r\n      if (playlist) {\r\n        set(playlist, updateData);\r\n      }\r\n      if (myPlaylist) {\r\n        set(myPlaylist, updateData);\r\n      }\r\n      if (this.fullPlayListData[playlistId]) {\r\n        set(this.fullPlayListData[playlistId], updateData);\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('remove playlist')\r\n  removePlayListById = flow((function * (id: number) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      yield apiService.removePlaylist(id);\r\n\r\n      this.playlists = this.playlists.filter((item) => item.id !== id);\r\n      this.myPlaylists = this.myPlaylists.filter((item) => item.id !== id);\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  getPlayListDataByIdSafe = (id: number) => this.fullPlayListData[id] || defaultPlayListFullData;\r\n\r\n  getPlayListDataById = (id: number) => this.fullPlayListData[id];\r\n\r\n  getPlayListById = (playlistId: number) => this.playlists.find(({ id }) => playlistId === id);\r\n\r\n  getMyPlayListById = (playlistId: number) => this.myPlaylists.find(({ id }) => playlistId === id);\r\n\r\n  getPlayListTrackById = (playlistData: {}, trackId: number) => playlistData.tracks.find(({ id }) => id === trackId);\r\n\r\n  @action('get playlist tracks')\r\n  loadFullPlayListData = flow((function * (playlistId: number) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n    const fullData = this.fullPlayListData[playlistId]; // TODO: remove cache\r\n\r\n    try {\r\n      const { data: playlistData } = yield apiService.getPlayList(playlistId);\r\n\r\n      if (!fullData) {\r\n        extendObservable(this.fullPlayListData, {\r\n          [playlistId]: playlistData || defaultPlayListFullData,\r\n        });\r\n      } else {\r\n        set(this.fullPlayListData, playlistId, playlistData || defaultPlayListFullData);\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('add playlist owner')\r\n  playlistOwner = flow((function * (playlistId: number, userId: number, action: UserManagementAction) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const playlist = this.getPlayListDataById(playlistId);\r\n\r\n      if (action === 'add') {\r\n        yield apiService.addPlaylistOwner(playlistId, userId);\r\n\r\n        playlist && set(playlist, { owners: [...playlist.owners, userId] });\r\n      } else if (action === 'remove') {\r\n        yield apiService.removePlaylistOwner(playlistId, userId);\r\n\r\n        playlist && set(playlist, { owners: playlist.owners.filter(id => id !== userId) });\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('add playlist owner')\r\n  playlistParticipant = flow((function * (playlistId: number, userId: number, action: UserManagementAction) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const playlist = this.getPlayListDataById(playlistId);\r\n\r\n      if (action === 'add') {\r\n        yield apiService.addPlaylistParticipant(playlistId, userId);\r\n\r\n        playlist && set(playlist, { participants: [...playlist.participants, userId] });\r\n      } else if (action === 'remove') {\r\n        yield apiService.removePlaylistParticipant(playlistId, userId);\r\n\r\n        playlist && set(playlist, { participants: playlist.participants.filter(id => id !== userId) });\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  playlistSubscribe = this.playlistParticipant;\r\n\r\n  @action('add playlist owner')\r\n  playlistUnsubscribe = flow((function * (playlistId: number, userId: number) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const playlist = this.getPlayListDataById(playlistId);\r\n\r\n      yield apiService.playlistUnsubscribe(playlistId, userId);\r\n\r\n      playlist && set(playlist, {\r\n        participants: playlist.participants.filter(id => id !== userId),\r\n        owners: playlist.owners.filter(id => id !== userId),\r\n      });\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this));\r\n\r\n  @action('add tracks to playlist data')\r\n  addTrackToPlaylist = flow(function * (playlistId: number, data: TTracksRecord) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      yield apiService.addTrack(playlistId, data);\r\n\r\n      // if (!newTrack.votes || !Array.isArray(newTrack.votes)) {\r\n      //   Object.assign(newTrack, { votes: [] });\r\n      // }\r\n\r\n      // if (newTrack) {\r\n      //   const playlist = this.getPlayListDataById(playlistId);\r\n      //\r\n      //   playlist && playlist.tracks.push(newTrack);\r\n      // }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this);\r\n\r\n  @action('remove track from playlist')\r\n  removeTrackFromPlaylist = flow(function * (playlistId: number, trackId: number) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      yield apiService.removeTrack(trackId);\r\n\r\n      // const playlist = this.getPlayListDataById(playlistId);\r\n\r\n      // playlist && set(playlist, { tracks: playlist.tracks.filter(({ id }) => id !== trackId) });\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this);\r\n\r\n  @action('vote track')\r\n  voteTrack = flow(function * (trackId: number, playlistId: number, isDislike: boolean = false) {\r\n    this.asyncState = ASYNC_STATE.pending;\r\n\r\n    try {\r\n      const { data } = yield apiService.voteTrack(trackId);\r\n\r\n      const currentUserId = safeGetCurrentUserId();\r\n      const playlistData = this.getPlayListDataById(playlistId);\r\n\r\n      if (playlistData) {\r\n        const playlistTrack = this.getPlayListTrackById(playlistData, trackId);\r\n\r\n        if (playlistTrack) {\r\n          if (!isDislike && data) {\r\n            set(playlistTrack, { votes: [ ...playlistTrack.votes, data ] });\r\n          } else {\r\n            set(playlistTrack, { votes: playlistTrack.votes.filter(({ user }) => Number(user) !== currentUserId) });\r\n          }\r\n        } else {\r\n          console.warn('voteTrack :: no playlist data');\r\n        }\r\n      } else {\r\n        console.warn('voteTrack :: no playlist data');\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      this.asyncState = ASYNC_STATE.done;\r\n    }\r\n  }).bind(this);\r\n}\r\n\r\nexport default new PlaylistsStore();\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport type {SettingsStore} from \"../../../stores/settingsStore\";\r\n\r\nimport \"./AppHeader.styles.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {localStorageCredentialsPresent} from \"../../helpers\";\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    title: 'User profile',\r\n    link: '/profile',\r\n    icon: 'message',\r\n  },\r\n  {\r\n    title: 'Playlists',\r\n    link: '/playlists',\r\n    icon: 'link',\r\n  },\r\n  {\r\n    title: 'Authorization',\r\n    link: '/auth',\r\n    icon: 'check',\r\n  },\r\n];\r\n\r\ntype Props = {\r\n  settingsStore: SettingsStore,\r\n};\r\ntype State = {\r\n  menuOpened: boolean,\r\n};\r\n\r\nexport class AppHeader extends Component<Props, State> {\r\n  state = {\r\n    menuOpened: false,\r\n  };\r\n\r\n  toggleMenuOpened = () => {\r\n    this.setState((prevState) => ({ menuOpened: !prevState.menuOpened }));\r\n  };\r\n\r\n  render () {\r\n    const { menuOpened } = this.state;\r\n    const { settingsStore, history } = this.props;\r\n\r\n    const dynamicProps = menuOpened ? {\r\n      type: 'menu-fold',\r\n      menuClassName: '',\r\n    } : {\r\n      type: 'menu-unfold',\r\n      menuClassName: ' collapsed'\r\n    };\r\n\r\n    return (\r\n      <div id=\"app-header\">\r\n        <ul className={`ant-menu ant-menu-dark ant-menu-root ant-menu-inline${dynamicProps.menuClassName}`}>\r\n          <Icon\r\n            type={dynamicProps.type}\r\n            className=\"main-menu-icon\"\r\n            onClick={this.toggleMenuOpened}\r\n          />\r\n          {MENU_ITEMS.map(({ title, link, icon }) => (\r\n            <li key={title} onClick={this.toggleMenuOpened}>\r\n              <NavLink\r\n                to={link}\r\n                className='ant-menu-item'\r\n                activeClassName='ant-menu-item-selected'\r\n                onContextMenu={(e) => e.preventDefault()}\r\n                strict\r\n              >\r\n                <Icon type={icon}/>\r\n                <span>{title}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h2>Music Room</h2>\r\n\r\n        {localStorageCredentialsPresent() && (\r\n          <div className=\"app-header-logout-panel\">\r\n            Hello, <strong>{settingsStore.currentUser.username}</strong>\r\n            <span\r\n              className=\"link-like\"\r\n              onClick={() => {\r\n                settingsStore.userLogout();\r\n                history.push('/auth');\r\n              }}\r\n            >Logout</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('settingsStore')(\r\n  observer(withRouter(AppHeader))\r\n);\r\n","// @flow\r\nimport React, {Component} from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Icon, Layout, Spin } from 'antd';\r\nimport { Provider, observer } from 'mobx-react';\r\nimport { configure } from 'mobx';\r\n\r\nimport Routes from './common/router/Routes';\r\n\r\nimport sandboxStore from \"./stores/sandboxStore\";\r\nimport settingsStore from \"./stores/settingsStore\";\r\nimport tracksStore from \"./stores/tracksStore\";\r\nimport playlistsStore from \"./stores/playlistsStore\";\r\nimport AppHeader from \"./common/components/AppHeader/AppHeader\";\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst basename = isDevelopment ? '' : '/';\r\n\r\ntype Props = {};\r\ntype State = {\r\n  globalInitiallyLoading: boolean;\r\n  playerExpanded: boolean,\r\n  hasError: boolean,\r\n};\r\n\r\nclass App extends Component<Props, State> {\r\n  state = {\r\n    globalInitiallyLoading: true,\r\n    playerExpanded: false,\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    try {\r\n      settingsStore.getMyUser()\r\n        .catch(() => this.setState({\r\n          hasError: true,\r\n        }))\r\n        .finally(() => this.setState({\r\n          globalInitiallyLoading: false,\r\n        }));\r\n    } catch (e) {\r\n      console.error('Error caught in App.componentDidMount');\r\n    }\r\n\r\n  };\r\n\r\n  componentDidUpdate = (_, prevState) => {\r\n    if (\r\n      prevState.globalInitiallyLoading &&\r\n      !this.state.globalInitiallyLoading &&\r\n      !this.state.hasError\r\n    ) {\r\n      if (window.DZ !== undefined) {\r\n        console.log('Deezer SDK is loaded');\r\n\r\n        // console.log('Before init');\r\n        window.DZ.init({\r\n          appId: '336362',\r\n          channelUrl: isDevelopment ?\r\n            'http://localhost:3000/channel.html' :\r\n            'https://front.musicroom.ml/channel.html',\r\n          player : {\r\n            container: 'dz-player',\r\n            width : 800,\r\n            height : 300,\r\n            playlist: true,\r\n            onload : () => {\r\n              console.log('Player is loaded');\r\n            }\r\n          }\r\n        });\r\n        // console.log('After init');\r\n        // console.log(initResult);\r\n      }\r\n    }\r\n  };\r\n\r\n  togglePlayerExpanded = () => {\r\n    this.setState((prevState) => ({\r\n      playerExpanded: !prevState.playerExpanded,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { playerExpanded, globalInitiallyLoading, hasError } = this.state;\r\n\r\n    if (globalInitiallyLoading) {\r\n      return (\r\n        <Spin spinning={true}>\r\n          <div id=\"the-great-loader\"></div>\r\n        </Spin>\r\n      );\r\n    }\r\n\r\n    if (hasError) {\r\n      return (\r\n        <div id=\"the-great-error\">\r\n          <p>Error occurred</p>\r\n          <p>Please clean the <strong><i>localStorage</i></strong></p>\r\n          <p>and reload application.</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Provider\r\n        sandboxStore={sandboxStore}\r\n        settingsStore={settingsStore}\r\n        tracksStore={tracksStore}\r\n        playlistsStore={playlistsStore}\r\n      >\r\n        <Router basename={basename}>\r\n          <Layout>\r\n            <AppHeader />\r\n\r\n            <Layout className='main-content-wrapper'>\r\n              <Routes/>\r\n            </Layout>\r\n\r\n            <div id=\"dz-player-container\" className={playerExpanded ? \"expanded\" : \"\"}>\r\n              <span\r\n                id=\"dz-player-anchor\"\r\n                onClick={this.togglePlayerExpanded}\r\n              >\r\n                <Icon type={playerExpanded ? \"caret-down\" : \"caret-up\"}/>\r\n              </span>\r\n              <div id=\"dz-player\"></div>\r\n            </div>\r\n          </Layout>\r\n        </Router>\r\n\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}