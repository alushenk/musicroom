version: '3'
services:
  nginx-proxy:
    image: danieldent/nginx-ssl-proxy
    restart: always
    environment:
      UPSTREAM: web:8000
      SERVERNAME: musicroom.ml
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - "/etc/letsencrypt"
    - "static-volume:/static"
    - "./nginx.conf:/etc/nginx/main_location.conf"


  #    - "music_room/static:music_room/static"
  #    - "code"
  #    - "code:/code"
  #    - "./static/:/home/ubuntu/music_room/static"


  #  nginx-proxy:
  #    image: jwilder/nginx-proxy
  #    ports:
  #    - "80:80"
  #    - "443:443"
  #    volumes:
  #    - /var/run/docker.sock:/tmp/docker.sock:ro
  #    environment:
  #    - VIRTUAL_PROTO=https
  #    - VIRTUAL_PORT=443
  web:
    restart: unless-stopped
    build: .
    #    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
    - "8000:8000"
    depends_on:
    - db
    - nginx-proxy
    #    environment:
    #    - VIRTUAL_HOST=musicroom.ml
    volumes:
    #    - "static-volume:/code"
    - "static-volume:/code/music_room/static"
  db:
    restart: unless-stopped
    image: postgres:alpine
    volumes:
    - "postgres-data:/var/lib/postgresql/data"
    ports:
    - "5432:5432"
#    redis:
#      restart: unless-stopped
#      image: redis:alpine
#      volumes:
#      - 'redis-data:/data'
#      ports:
#      - "6379:6379"
#  nginx:
#    image: nginx:latest
#    container_name: production_nginx
#    volumes:
#    - ./nginx.conf:/etc/nginx/nginx.conf
#    - ./static/:/home/ubuntu/music_room/static/
#    - ./musicroom.morbax.com_bundle.crt:/etc/ssl/certs/musicroom.morbax.com_bundle.crt
#    - ./musicroom.morbax.com.key:/etc/ssl/private/musicroom.morbax.com.key
#    ports:
#    - 80:80
#    - 443:443
volumes:
  nginx-proxy:
  postgres-data:
  static-volume:
#  redis:
#  code: