# variable {{host}}  located in http-client.env.json file (the root of project)
# variable {{token}} in http-client.private.env.json

# регистрация
POST {{host}}/auth/registration/
Content-Type: application/json

//{
//  "username": "wartoxy@gmail.com",
//  "email": "wartoxy@gmail.com",
//  "password1": "q12we34rt56y",
//  "password2": "q12we34rt56y"
//}
{
  "username": "antoha",
  "email": "lush.antony@gmail.com",
  "password1": "q12we34rt56y",
  "password2": "q12we34rt56y"
}

### вводите сюда логин и пароль - получаете в ответ токен

POST {{host}}/auth/login/
Content-Type: application/json

//{
//  "email": "wartoxy@gmail.com",
//  "password": "asdfsa324"
//}
{
  "email": "lush.antony@gmail.com",
  "password": "q12we34rt56y"
}

### ресет пароля (старый токен останется валидным)

POST {{host}}/auth/password/reset/
Content-Type: application/json

{
  "email": "wartoxy@gmail.com"
}

### подтверждение ресета пароля (переходишь из письма).
# старый токен остается валидным.
# теперь чтобы получить новый токен надо вводить новый пароль, старый не принимает

POST {{host}}/auth/password/reset/confirm/
Content-Type: application/json

{
  "new_password1": "asdfsa324",
  "new_password2": "asdfsa324",
  "uid": "Mw",
  "token": "55l-a609d79039dcfbae7c21"
}


### текущий пользователь (профиль)

GET {{host}}/auth/user
Authorization: JWT {{token}}
Content-Type: application/json

###

GET {{host}}/auth/google/url
Content-Type: application/json

###

GET {{host}}/api/
Authorization: JWT {{token}}
Content-Type: application/json

###

GET {{host}}/api/playlists/
Authorization: JWT {{token}}
Content-Type: application/json

###

POST {{host}}/api/playlists/
Authorization: JWT {{token}}
Content-Type: application/json

{
  "name": "SUKA",
  "is_public": true,
  "is_active": true
//  "time_from": "string",
//  "time_to": "string",
//  "owners": [
//    "string"
//  ]
}

###

GET {{host}}/api/tracks/
Authorization: JWT {{token}}
Content-Type: application/json

###

GET {{host}}/api/users/
Authorization: JWT {{token}}
Content-Type: application/json

### удалить все данные из базы

GET {{host}}/management/clear-data
Content-Type: application/json

### заполнить тестовыми (аналогично ./manage.py add_content; main/management/commands/add_content.py)

GET {{host}}/management/fill-data
Content-Type: application/json

###

GET {{host}}/api/users/user_search/?name=a
Authorization: JWT {{token}}
Content-Type: application/json

###